<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://arrow-kt.io/community/blog</id>
    <title>Arrow Blog</title>
    <updated>2023-04-17T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://arrow-kt.io/community/blog"/>
    <subtitle>Arrow Blog</subtitle>
    <icon>https://arrow-kt.io/img/arrow-brand-icon.svg</icon>
    <entry>
        <title type="html"><![CDATA[Typed Error Handling in Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2023/04/17/typed-error-handling-in-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2023/04/17/typed-error-handling-in-kotlin"/>
        <updated>2023-04-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A comparative study about several typed-error handling practices in Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>A comparative study about several typed-error handling practices in Kotlin.</p><p>There are various approaches to error handling in the Kotlin community.
In this article we’ve explored a small subset of typed error handling practices in the community. </p><p>From the approaches explored, there were three patterns that aligns with Kotlin recommendation with
relatively low cognitive complexity including: Sealed class matching with early returns, Arrow's <code>either { }</code> builder,
and Arrow's <code>context(Raise&lt;E&gt;)</code> with context-receivers. </p><p>Arrow's <code>context(Raise&lt;E&gt;)</code> achieved the most optimized score on all aspects of
developer productivity. This includes having the lowest cognitive complexity, the lowest cyclomatic complexity
as well as the most succinct with the least lines of codes.</p><p>Read the full article: <a href="https://medium.com/@mitchellyuwono/typed-error-handling-in-kotlin-11ff25882880" target="_blank" rel="noopener noreferrer">Typed Error Handling in Kotlin</a>.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow 2.0's Trajectory]]></title>
        <id>https://arrow-kt.io/community/blog/2023/04/16/arrow-2-0-trajectory</id>
        <link href="https://arrow-kt.io/community/blog/2023/04/16/arrow-2-0-trajectory"/>
        <updated>2023-04-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A full transcript and the slides from Simon Vergauwen's presentation from KotlinConf 2023 about the history of Arrow and where it's going.]]></summary>
        <content type="html"><![CDATA[<p>A full transcript and the slides from <a href="https://twitter.com/vergauwen_simon" target="_blank" rel="noopener noreferrer">Simon Vergauwen's</a> presentation from KotlinConf 2023 about the history of Arrow and where it's going.</p>]]></content>
        <category label="core" term="core"/>
        <category label="slidedecks" term="slidedecks"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow 1.2.0-RC Release Summary]]></title>
        <id>https://arrow-kt.io/community/blog/2023/04/04/arrow-1-2-0-rc-summary</id>
        <link href="https://arrow-kt.io/community/blog/2023/04/04/arrow-1-2-0-rc-summary"/>
        <updated>2023-04-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We're excited to announce Arrow 1.2.0-RC alongside a new Arrow website. To briefly summarize, this release:]]></summary>
        <content type="html"><![CDATA[<p>We're excited to announce Arrow 1.2.0-RC alongside a new Arrow website. To briefly summarize, this release:</p><ul><li>Introduces a brand new <a href="http://arrow-kt.io/learn/typed-errors/working-with-typed-errors/" target="_blank" rel="noopener noreferrer">typed errors</a> module.</li><li>Adds more options for <a href="http://arrow-kt.io/learn/resilience/" target="_blank" rel="noopener noreferrer">resilience</a>.</li><li>Marks every function and type we intend to remove in 2.0 as <code>@Deprecated</code>.</li></ul><p>Read more details in the full <a href="https://xebia.com/blog/arrow-1-2-0-rc-is-now-available/" target="_blank" rel="noopener noreferrer">Arrow 1.2.0 release announcement</a>.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Fun in Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2023/02/04/functional-fun-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2023/02/04/functional-fun-kotlin"/>
        <updated>2023-02-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Simon Vergauwen shares why he thinks Kotlin is great language to do modern functional programming, and why he believes it's perhaps the best language to do modern mainstream (hardcore) functional programming.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://twitter.com/vergauwen_simon" target="_blank" rel="noopener noreferrer">Simon Vergauwen</a> shares why he thinks Kotlin is great language to do modern functional programming, and why he believes it's perhaps the best language to do modern mainstream (hardcore) functional programming.</p>]]></content>
        <category label="core" term="core"/>
        <category label="slidedecks" term="slidedecks"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CodelyTV Interview with Raul Raja]]></title>
        <id>https://arrow-kt.io/community/blog/2023/01/03/codelytv-interview</id>
        <link href="https://arrow-kt.io/community/blog/2023/01/03/codelytv-interview"/>
        <updated>2023-01-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An interview with Arrow maintainer Raúl Raja by Rafa Gómez on CodelyTV.]]></summary>
        <content type="html"><![CDATA[<p>An interview with Arrow maintainer Raúl Raja by Rafa Gómez on CodelyTV.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Actions as Data]]></title>
        <id>https://arrow-kt.io/community/blog/2022/12/01/actions-as-data</id>
        <link href="https://arrow-kt.io/community/blog/2022/12/01/actions-as-data"/>
        <updated>2022-12-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A presentation by Alejandro Serrano at Advanced Kotlin Dev Day 2022.]]></summary>
        <content type="html"><![CDATA[<p>A presentation by Alejandro Serrano at Advanced Kotlin Dev Day 2022.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Context Receivers: Kotlin's new secret sauce]]></title>
        <id>https://arrow-kt.io/community/blog/2022/12/01/context-receivers</id>
        <link href="https://arrow-kt.io/community/blog/2022/12/01/context-receivers"/>
        <updated>2022-12-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Alejandro Serrano's presentation from Advanced Kotlin Dev Day 2022 about context receivers.]]></summary>
        <content type="html"><![CDATA[<p>Alejandro Serrano's presentation from Advanced Kotlin Dev Day 2022 about context receivers.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Error Handling - A Practical Approach]]></title>
        <id>https://arrow-kt.io/community/blog/2022/12/01/functional-error-handling</id>
        <link href="https://arrow-kt.io/community/blog/2022/12/01/functional-error-handling"/>
        <updated>2022-12-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A presentation by Bas de Groot at Advanced Kotlin Dev Day 2022.]]></summary>
        <content type="html"><![CDATA[<p>A presentation by Bas de Groot at Advanced Kotlin Dev Day 2022.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Flowing]]></title>
        <id>https://arrow-kt.io/community/blog/2022/12/01/functional-flowing</id>
        <link href="https://arrow-kt.io/community/blog/2022/12/01/functional-flowing"/>
        <updated>2022-12-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Simon Vergauwen shows how to leverage KotlinX Flow to describe powerful programs and build pipelines to transform and manipulate data in an efficient streaming way.]]></summary>
        <content type="html"><![CDATA[<p>Simon Vergauwen shows how to leverage KotlinX Flow to describe powerful programs and build pipelines to transform and manipulate data in an efficient streaming way.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Graceful Shutdown with Structured Concurrency]]></title>
        <id>https://arrow-kt.io/community/blog/2022/12/01/graceful-shutdown-structured-concurrency</id>
        <link href="https://arrow-kt.io/community/blog/2022/12/01/graceful-shutdown-structured-concurrency"/>
        <updated>2022-12-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A presentation by Simon Vergauwen at Advanced Kotlin Dev Day 2022.]]></summary>
        <content type="html"><![CDATA[<p>A presentation by Simon Vergauwen at Advanced Kotlin Dev Day 2022.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Programming in Kotlin: Exploring Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2022/07/01/exploring-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2022/07/01/exploring-arrow"/>
        <updated>2022-07-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A presentation by Ties van de Veen at Voxxed Days Luxembourg 2022.]]></summary>
        <content type="html"><![CDATA[<p>A presentation by Ties van de Veen at Voxxed Days Luxembourg 2022.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Turbocharging Kotlin: Arrow Analysis, Optics, and Meta]]></title>
        <id>https://arrow-kt.io/community/blog/2022/06/28/turbocharging-kotlin-talking-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2022/06/28/turbocharging-kotlin-talking-kotlin"/>
        <updated>2022-06-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Raul Raja, Simon Vergauwen, and Alejandro Serrano appeared on Talking Kotlin to chat about Arrow.]]></summary>
        <content type="html"><![CDATA[<p>Raul Raja, Simon Vergauwen, and Alejandro Serrano appeared on Talking Kotlin to chat about Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="meta" term="meta"/>
        <category label="optics" term="optics"/>
        <category label="analysis" term="analysis"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow put on a big show at Kotlin Dev Day]]></title>
        <id>https://arrow-kt.io/community/blog/2022/06/14/arrow-kotlin-dev-day</id>
        <link href="https://arrow-kt.io/community/blog/2022/06/14/arrow-kotlin-dev-day"/>
        <updated>2022-06-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A recap of the attention Arrow received at Kotlin Dev Day.]]></summary>
        <content type="html"><![CDATA[<p>A recap of the attention Arrow received at Kotlin Dev Day.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building applications with Kotlin and Arrow.kt in style]]></title>
        <id>https://arrow-kt.io/community/blog/2022/05/31/building-applications-with-kotlin-and-arrow-kt-in-style</id>
        <link href="https://arrow-kt.io/community/blog/2022/05/31/building-applications-with-kotlin-and-arrow-kt-in-style"/>
        <updated>2022-05-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A presentation by Simon Vergauwen presented on the official Kotlin YouTube channel.]]></summary>
        <content type="html"><![CDATA[<p>A presentation by Simon Vergauwen presented on the official Kotlin YouTube channel.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Extending kotlinx.serialization functionality with Arrow Meta with Karin-Aleksandra Monoid]]></title>
        <id>https://arrow-kt.io/community/blog/2022/05/30/extending-kotlinx-serialization-functionality-arrow-meta</id>
        <link href="https://arrow-kt.io/community/blog/2022/05/30/extending-kotlinx-serialization-functionality-arrow-meta"/>
        <updated>2022-05-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Karin-Aleksandra Monoid provides an overview of Arrow Meta features.]]></summary>
        <content type="html"><![CDATA[<p>Karin-Aleksandra Monoid provides an overview of Arrow Meta features.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Super-charge your build with Arrow Analysis by Alejandro Serrano Mena]]></title>
        <id>https://arrow-kt.io/community/blog/2022/05/30/super-charge-build-arrow-analysis</id>
        <link href="https://arrow-kt.io/community/blog/2022/05/30/super-charge-build-arrow-analysis"/>
        <updated>2022-05-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Alejandro Serrano presents Arrow Analysis, a Kotlin compiler plug-in that does pre-and post-condition and type invariant checking at compile time.]]></summary>
        <content type="html"><![CDATA[<p>Alejandro Serrano presents Arrow Analysis, a Kotlin compiler plug-in that does pre-and post-condition and type invariant checking at compile time.</p>]]></content>
        <category label="analysis" term="analysis"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional programming in Kotlin: exploring Arrow by Ties Van de Ven]]></title>
        <id>https://arrow-kt.io/community/blog/2022/05/18/functional-programming-kotlin-exploring-arrow-ties-van-de-ven</id>
        <link href="https://arrow-kt.io/community/blog/2022/05/18/functional-programming-kotlin-exploring-arrow-ties-van-de-ven"/>
        <updated>2022-05-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A talk by Ties van de Ven that shows how Arrow helps to unleash the full FP power of Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>A talk by Ties van de Ven that shows how Arrow helps to unleash the full FP power of Kotlin.</p>]]></content>
        <category label="core" term="core"/>
        <category label="optics" term="optics"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Domain Model Validation In Kotlin: Part 4]]></title>
        <id>https://arrow-kt.io/community/blog/2022/03/31/domain-model-validation-in-kotlin-part-4</id>
        <link href="https://arrow-kt.io/community/blog/2022/03/31/domain-model-validation-in-kotlin-part-4"/>
        <updated>2022-03-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this final part of the series, Tiberiu puts everything together in a small CLI application, using Arrow data types and computation blocks]]></summary>
        <content type="html"><![CDATA[<p>In this final part of the series, Tiberiu puts everything together in a small CLI application, using Arrow data types and computation blocks
to handle validation errors and exceptions in a unitary and composable way.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Domain Model Validation In Kotlin: Part 3]]></title>
        <id>https://arrow-kt.io/community/blog/2022/03/10/domain-model-validation-in-kotlin-part-3</id>
        <link href="https://arrow-kt.io/community/blog/2022/03/10/domain-model-validation-in-kotlin-part-3"/>
        <updated>2022-03-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In the third part of the series, Tiberiu Tofan explores multiple techniques of using a context when doing validations]]></summary>
        <content type="html"><![CDATA[<p>In the third part of the series, Tiberiu Tofan explores multiple techniques of using a context when doing validations
and how the context can be changed in the tests to simulate success or failure. All using just Kotlin standard library.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Domain Model Validation In Kotlin: Part 2]]></title>
        <id>https://arrow-kt.io/community/blog/2022/03/03/domain-model-validation-in-kotlin-part-2</id>
        <link href="https://arrow-kt.io/community/blog/2022/03/03/domain-model-validation-in-kotlin-part-2"/>
        <updated>2022-03-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In the second article in this series, Tiberiu Tofan writes how Validated type can be]]></summary>
        <content type="html"><![CDATA[<p>In the second article in this series, Tiberiu Tofan writes how Validated type can be
used to validate multiple properties, accumulate the errors, apply individual
element validations to lists of elements, and create rules that
depend on numerous properties.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Domain Model Validation In Kotlin: Part 1]]></title>
        <id>https://arrow-kt.io/community/blog/2022/02/22/domain-model-validation-in-kotlin-part-1</id>
        <link href="https://arrow-kt.io/community/blog/2022/02/22/domain-model-validation-in-kotlin-part-1"/>
        <updated>2022-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In the first article in this series, Tiberiu Tofan describes his team's journey using Kotlin and Arrow for domain model validation,]]></summary>
        <content type="html"><![CDATA[<p>In the first article in this series, Tiberiu Tofan describes his team's journey using Kotlin and Arrow for domain model validation,
starting by setting the domain model's foundation in a type-safe way.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing Arrow Analysis - a Kotlin compiler plug-in]]></title>
        <id>https://arrow-kt.io/community/blog/2022/02/02/announcing-arrow-analysis</id>
        <link href="https://arrow-kt.io/community/blog/2022/02/02/announcing-arrow-analysis"/>
        <updated>2022-02-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Announcing Arrow Analysis - a Kotlin compiler plug-in.]]></summary>
        <content type="html"><![CDATA[<p>Announcing Arrow Analysis - a Kotlin compiler plug-in.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional programming in Kotlin with Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2021/12/15/functional-programming-in-kotlin-with-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2021/12/15/functional-programming-in-kotlin-with-arrow"/>
        <updated>2021-12-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A presentation by Simon Vergauwen and Alejandro Serrano presented on the official Kotlin YouTube channel.]]></summary>
        <content type="html"><![CDATA[<p>A presentation by Simon Vergauwen and Alejandro Serrano presented on the official Kotlin YouTube channel.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional programming in Kotlin: Exploring Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2021/11/30/functional-programming-kotlin-exploring-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2021/11/30/functional-programming-kotlin-exploring-arrow"/>
        <updated>2021-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A talk by Ties van de Ven explaining how to use the Either monad in practice, and how to use Arrow Optics lenses.]]></summary>
        <content type="html"><![CDATA[<p>A talk by Ties van de Ven explaining how to use the Either monad in practice, and how to use Arrow Optics lenses.</p>]]></content>
        <category label="core" term="core"/>
        <category label="optics" term="optics"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow of Outrageous Error Handling]]></title>
        <id>https://arrow-kt.io/community/blog/2021/08/12/arrow-of-outrageous-error-handling</id>
        <link href="https://arrow-kt.io/community/blog/2021/08/12/arrow-of-outrageous-error-handling"/>
        <updated>2021-08-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An Android Worldwide talk by David Rawson about error handling on Android using Arrow.]]></summary>
        <content type="html"><![CDATA[<p>An Android Worldwide talk by David Rawson about error handling on Android using Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Domain Modeling in Kotlin - Validation]]></title>
        <id>https://arrow-kt.io/community/blog/2021/04/13/functional-domain-modeling-kotlin-validation</id>
        <link href="https://arrow-kt.io/community/blog/2021/04/13/functional-domain-modeling-kotlin-validation"/>
        <updated>2021-04-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In part two of Functional Domain Modeling in Kotlin, Simon Vergauwen shows how to improve a domain with validation.]]></summary>
        <content type="html"><![CDATA[<p>In part two of Functional Domain Modeling in Kotlin, Simon Vergauwen shows how to improve a domain with validation.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Domain Modeling in Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2021/04/11/functional-domain-modeling-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2021/04/11/functional-domain-modeling-kotlin"/>
        <updated>2021-04-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn how to leverage Functional Domain Modeling to fully utilize the Kotlin type system and prevent bugs.]]></summary>
        <content type="html"><![CDATA[<p>Learn how to leverage Functional Domain Modeling to fully utilize the Kotlin type system and prevent bugs.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your own custom Spring Data repository]]></title>
        <id>https://arrow-kt.io/community/blog/2021/04/11/your-own-custom-spring-data-repository</id>
        <link href="https://arrow-kt.io/community/blog/2021/04/11/your-own-custom-spring-data-repository"/>
        <updated>2021-04-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to integrate Spring Data Repository with Arrow.]]></summary>
        <content type="html"><![CDATA[<p>How to integrate Spring Data Repository with Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow 0.12.0 & 0.13.1 are now available]]></title>
        <id>https://arrow-kt.io/community/blog/2021/04/01/arrow-0-12-0-0-13-1-release</id>
        <link href="https://arrow-kt.io/community/blog/2021/04/01/arrow-0-12-0-0-13-1-release"/>
        <updated>2021-04-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow 0.12.0 & 0.13.1 are now available, featuring streamlining of the library for 1.0.0.]]></summary>
        <content type="html"><![CDATA[<p>Arrow 0.12.0 &amp; 0.13.1 are now available, featuring streamlining of the library for 1.0.0.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: Shiny Things]]></title>
        <id>https://arrow-kt.io/community/blog/2021/02/26/advanced-fp-enterprise-bee-shiny-things</id>
        <link href="https://arrow-kt.io/community/blog/2021/02/26/advanced-fp-enterprise-bee-shiny-things"/>
        <updated>2021-02-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Garth Gilmour concludes his 8-part series introducing advanced FP concepts via Kotlin and Arrow.]]></summary>
        <content type="html"><![CDATA[<p>Garth Gilmour concludes his 8-part series introducing advanced FP concepts via Kotlin and Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: State]]></title>
        <id>https://arrow-kt.io/community/blog/2021/02/19/advanced-fp-enterprise-bee-state</id>
        <link href="https://arrow-kt.io/community/blog/2021/02/19/advanced-fp-enterprise-bee-state"/>
        <updated>2021-02-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is the seventh post in a series written by Garth Gilmour introducing advanced FP concepts via Kotlin and Arrow. This article explores the world of Monads, and, in particular, the State type.]]></summary>
        <content type="html"><![CDATA[<p>This is the seventh post in a series written by Garth Gilmour introducing advanced FP concepts via Kotlin and Arrow. This article explores the world of Monads, and, in particular, the State type.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hands-on Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2021/02/12/hands-on-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2021/02/12/hands-on-arrow"/>
        <updated>2021-02-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A video from the meetup of the Google Developer Group based in Nuremberg with a presentation by Karin-Aleksandra Monoid about using Arrow.]]></summary>
        <content type="html"><![CDATA[<p>A video from the meetup of the Google Developer Group based in Nuremberg with a presentation by Karin-Aleksandra Monoid about using Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: Optics]]></title>
        <id>https://arrow-kt.io/community/blog/2021/02/10/advanced-fp-enterprise-bee-optics</id>
        <link href="https://arrow-kt.io/community/blog/2021/02/10/advanced-fp-enterprise-bee-optics"/>
        <updated>2021-02-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is the sixth post in a series introducing advanced FP concepts via Kotlin and Arrow. This article covers Optics with Kotlin and Arrow.]]></summary>
        <content type="html"><![CDATA[<p>This is the sixth post in a series introducing advanced FP concepts via Kotlin and Arrow. This article covers Optics with Kotlin and Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: Typeclasses]]></title>
        <id>https://arrow-kt.io/community/blog/2021/02/05/advanced-fp-enterprise-bee-typeclasses</id>
        <link href="https://arrow-kt.io/community/blog/2021/02/05/advanced-fp-enterprise-bee-typeclasses"/>
        <updated>2021-02-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This fifth post in a series introduces advanced FP concepts via Kotlin and Arrow. This article introduces Typeclasses, and reviews a practical example of Typeclasses from the Arrow library.]]></summary>
        <content type="html"><![CDATA[<p>This fifth post in a series introduces advanced FP concepts via Kotlin and Arrow. This article introduces Typeclasses, and reviews a practical example of Typeclasses from the Arrow library.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: Kleisli]]></title>
        <id>https://arrow-kt.io/community/blog/2021/01/29/advanced-fp-enterprise-bee-kleisli</id>
        <link href="https://arrow-kt.io/community/blog/2021/01/29/advanced-fp-enterprise-bee-kleisli"/>
        <updated>2021-01-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This fourth post in a series introduces advanced FP concepts via Kotlin and Arrow. This article looks at the Kleisli type.]]></summary>
        <content type="html"><![CDATA[<p>This fourth post in a series introduces advanced FP concepts via Kotlin and Arrow. This article looks at the Kleisli type.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: Higher Kinded Types]]></title>
        <id>https://arrow-kt.io/community/blog/2021/01/22/advanced-fp-enterprise-bee-higher-kinded-types</id>
        <link href="https://arrow-kt.io/community/blog/2021/01/22/advanced-fp-enterprise-bee-higher-kinded-types"/>
        <updated>2021-01-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This third post in a series introduces advanced FP concepts via Kotlin and Arrow. This article shows the usefulness of Higher Kinded Types.]]></summary>
        <content type="html"><![CDATA[<p>This third post in a series introduces advanced FP concepts via Kotlin and Arrow. This article shows the usefulness of Higher Kinded Types.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[FP concepts with Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2021/01/20/fp-concepts-with-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2021/01/20/fp-concepts-with-arrow"/>
        <updated>2021-01-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A video from the Belfast Kotlin User Group with a presentation by Katie Levy and Shelby Cohen covering FP concepts with Arrow.]]></summary>
        <content type="html"><![CDATA[<p>A video from the Belfast Kotlin User Group with a presentation by Katie Levy and Shelby Cohen covering FP concepts with Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: Applicatives]]></title>
        <id>https://arrow-kt.io/community/blog/2021/01/15/advanced-fp-enterprise-bee-applicatives</id>
        <link href="https://arrow-kt.io/community/blog/2021/01/15/advanced-fp-enterprise-bee-applicatives"/>
        <updated>2021-01-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This second post in a series introduces advanced FP concepts via Kotlin and Arrow. This article takes a deep dive into Applicatives.]]></summary>
        <content type="html"><![CDATA[<p>This second post in a series introduces advanced FP concepts via Kotlin and Arrow. This article takes a deep dive into Applicatives.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Android]]></title>
        <id>https://arrow-kt.io/community/blog/2021/01/13/functional-android</id>
        <link href="https://arrow-kt.io/community/blog/2021/01/13/functional-android"/>
        <updated>2021-01-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this talk from the January 13th, 2021 Kotlin London User Group meetup, Jorge Castillo shows how to seamlessly integrate the functional programming paradigm with our Android architecture to get the most out of both worlds.]]></summary>
        <content type="html"><![CDATA[<p>In this talk from the January 13th, 2021 Kotlin London User Group meetup, Jorge Castillo shows how to seamlessly integrate the functional programming paradigm with our Android architecture to get the most out of both worlds.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced FP for the Enterprise Bee: Traverse]]></title>
        <id>https://arrow-kt.io/community/blog/2021/01/08/advanced-fp-enterprise-bee-traverse</id>
        <link href="https://arrow-kt.io/community/blog/2021/01/08/advanced-fp-enterprise-bee-traverse"/>
        <updated>2021-01-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This first post in a series introduces advanced FP concepts via Kotlin and Arrow. This article takes a deep dive into the Traverse operation.]]></summary>
        <content type="html"><![CDATA[<p>This first post in a series introduces advanced FP concepts via Kotlin and Arrow. This article takes a deep dive into the Traverse operation.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Roll your own Computation blocks in Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2020/12/16/roll-your-own-computation-blocks-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2020/12/16/roll-your-own-computation-blocks-kotlin"/>
        <updated>2020-12-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Computation blocks empower library authors and users to build ad-hoc operators and DSLs over any data-type getting rid of API complexity and simplifying composition. In this talk, we will learn how we can build Computation blocks over Kotlin suspend functions & the Arrow Continuations library's reset / shift capabilities. We will demonstrate the composition of well known JVM data-types and patterns such as lists, futures, streams, and IOs, where callback chains can be simply replaced by a single]]></summary>
        <content type="html"><![CDATA[<p>Computation blocks empower library authors and users to build ad-hoc operators and DSLs over any data-type getting rid of API complexity and simplifying composition. In this talk, we will learn how we can build Computation blocks over Kotlin suspend functions &amp; the Arrow Continuations library's <code>reset</code> / <code>shift</code> capabilities. We will demonstrate the composition of well known JVM data-types and patterns such as lists, futures, streams, and IOs, where callback chains can be simply replaced by a single
suspended operator. The Kotlin suspension system provides enough capabilities to implement delimited continuations allowing us to ignore methods such as <code>map</code> &amp; <code>flatMap</code> on your favorite data-type in favor of direct imperative syntax. Leveraging Kotlin suspension &amp; thinking of Continuations as "The Mother of all Monads", we will embark on this journey where we'll build and roll our own computation blocks with Arrow Continuations.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fight Complexity with Functional Programming]]></title>
        <id>https://arrow-kt.io/community/blog/2020/11/19/fight-complexity-with-functional-programming</id>
        <link href="https://arrow-kt.io/community/blog/2020/11/19/fight-complexity-with-functional-programming"/>
        <updated>2020-11-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A Metric-driven approach to reduce Cognitive Complexity in a code base, using Functional Programming, demoed hands-on, by solving a complex real-world ubiquitous design challenge - REST API Bulk Request Validation, with an extensible Framework that separates what-to-do (Validations) from how-to-do (Validation Orchestration). Let's do a case study of a successful implementation done by our team in the world's largest SaaS org, Salesforce, using Kotlin and Arrow.]]></summary>
        <content type="html"><![CDATA[<p>A Metric-driven approach to reduce Cognitive Complexity in a code base, using Functional Programming, demoed hands-on, by solving a complex real-world ubiquitous design challenge - REST API Bulk Request Validation, with an extensible Framework that separates what-to-do (Validations) from how-to-do (Validation Orchestration). Let's do a case study of a successful implementation done by our team in the world's largest SaaS org, Salesforce, using Kotlin and Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow Promoted to Adopt by Technology Radar]]></title>
        <id>https://arrow-kt.io/community/blog/2020/10/28/arrow-promoted-to-adopt</id>
        <link href="https://arrow-kt.io/community/blog/2020/10/28/arrow-promoted-to-adopt"/>
        <updated>2020-10-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow is promoted as the functional companion for Kotlin's standard library. Indeed, the package of ready-to-use higher-level abstractions delivered by Arrow has proven so useful that our teams now consider Arrow a sensible default when working with Kotlin. Recently, in preparation for the 1.0 release, the Arrow team introduced several changes, including the addition of new modules but also some deprecations and removals.]]></summary>
        <content type="html"><![CDATA[<p>Arrow is promoted as the functional companion for Kotlin's standard library. Indeed, the package of ready-to-use higher-level abstractions delivered by Arrow has proven so useful that our teams now consider Arrow a sensible default when working with Kotlin. Recently, in preparation for the 1.0 release, the Arrow team introduced several changes, including the addition of new modules but also some deprecations and removals.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to fix the pain of modifying Kotlin nested data classes]]></title>
        <id>https://arrow-kt.io/community/blog/2020/10/28/modifying-kotlin-nested-data-classes</id>
        <link href="https://arrow-kt.io/community/blog/2020/10/28/modifying-kotlin-nested-data-classes"/>
        <updated>2020-10-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Lenses are not part of the Kotlin Standard Library yet, so we will need to use an Open Source library called Arrow-kt. Arrow-kt is a huge community effort to bring some of the missing functional programming features to Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>Lenses are not part of the Kotlin Standard Library yet, so we will need to use an Open Source library called Arrow-kt. Arrow-kt is a huge community effort to bring some of the missing functional programming features to Kotlin.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Technology Radar Promotes Arrow to 'Adopt']]></title>
        <id>https://arrow-kt.io/community/blog/2020/10/28/technology-radar-promotes-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2020/10/28/technology-radar-promotes-arrow"/>
        <updated>2020-10-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow has been promoted to “Adopt” by ThoughtWorks’ technology guide Technology Radar.]]></summary>
        <content type="html"><![CDATA[<p>Arrow has been promoted to “Adopt” by ThoughtWorks’ technology guide <em>Technology Radar</em>.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing Kotlin Compiler Plugins with Arrow Meta]]></title>
        <id>https://arrow-kt.io/community/blog/2020/10/08/writing-kotlin-compiler-plugins-talk</id>
        <link href="https://arrow-kt.io/community/blog/2020/10/08/writing-kotlin-compiler-plugins-talk"/>
        <updated>2020-10-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Lean how to write and test compiler plugins and IDE plugins with Arrow Meta.]]></summary>
        <content type="html"><![CDATA[<p>Lean how to write and test compiler plugins and IDE plugins with Arrow Meta.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Type Proofs and FP for the Kotlin Type System]]></title>
        <id>https://arrow-kt.io/community/blog/2020/06/16/type-proofs-fp-kotlin-talk</id>
        <link href="https://arrow-kt.io/community/blog/2020/06/16/type-proofs-fp-kotlin-talk"/>
        <updated>2020-06-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Type Proofs is a new compiler plugin built on Arrow Meta enabling new features in the Kotlin type system, such as Type Classes, Union Types, Type Refinements, and many other extensions that make Functional Programming easier in Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>Type Proofs is a new compiler plugin built on Arrow Meta enabling new features in the Kotlin type system, such as Type Classes, Union Types, Type Refinements, and many other extensions that make Functional Programming easier in Kotlin.</p><p>Type Proofs propositions are expressed as extension functions that unlock new relationships between types ad-hoc whilst remaining fully compatible with subtype polymorphism and the existing inheritance type system.</p><p>This talk demonstrates some of the new features the Arrow team is introducing in Arrow at the type level and IDE and how others can benefit from them when building libraries and applications.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Asynchronisme et hexagone en Kotlin avec ArrowKt]]></title>
        <id>https://arrow-kt.io/community/blog/2020/06/11/asynchronisme-et-hexagone-en-kotlin-avec-Arrow</id>
        <link href="https://arrow-kt.io/community/blog/2020/06/11/asynchronisme-et-hexagone-en-kotlin-avec-Arrow"/>
        <updated>2020-06-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[J'aime bien le DDD et surtout les architectures hexagonales. Avoir un domaine auto-portant et non couplé à des blocs techniques comme Spring (ou autres) apporte beaucoup dans la testabilité et l'évolutivité de l'application.]]></summary>
        <content type="html"><![CDATA[<p>J'aime bien le DDD et surtout les architectures hexagonales. Avoir un domaine auto-portant et non couplé à des blocs techniques comme Spring (ou autres) apporte beaucoup dans la testabilité et l'évolutivité de l'application.
Les modèles d'asynchronismes (programmation réactive, retardée, coroutines...) empêchent la dissociation stricte de notre modèle métier et de notre code infra dans un langage comme Kotlin.
Obligé d'utiliser une lib de coroutine ou autre programmation reactive.
Deux solutions s'offrent alors :</p><ul><li>Définir que les modèles d'asynchronisme sont des invariants de notre domaine et accepter ce couplage</li><li>Chercher comment modéliser notre domaine comme un ensemble de comportements asynchrones
Dans ce talk nous allons voir comment réaliser la deuxième solution en utilisant la librairie Arrow et son modèle conceptuel d'asynchronisme pour nous permettre de découpler notre domaine de toute logique d'infrastructure.</li></ul>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow Fx: Functional Domain Modeling with Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2020/06/05/functional-domain-modeling-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2020/06/05/functional-domain-modeling-kotlin"/>
        <updated>2020-06-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow Fx is a purely functional concurrency framework for Kotlin’s suspend system.]]></summary>
        <content type="html"><![CDATA[<p>Arrow Fx is a purely functional concurrency framework for Kotlin’s suspend system.</p><p>In this talk, we will learn how typed functional programming and functional domain modeling powered by Arrow Optics, Fx, and Meta can be applied to assemble powerful applications and architectures from small and simple building blocks.</p><p>Simon and Raul will cover important topics and patterns such as optics, union types, refined types, type classes, automatic task cancellation, safe resource handling, and compare how Arrow Fx differs from KotlinX coroutines.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Type Proofs and FP for the Kotlin Type System]]></title>
        <id>https://arrow-kt.io/community/blog/2020/05/27/type-proofs-fp-kotlin-talk</id>
        <link href="https://arrow-kt.io/community/blog/2020/05/27/type-proofs-fp-kotlin-talk"/>
        <updated>2020-05-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Type Proofs is a new compiler plugin built on Arrow Meta enabling new features in the Kotlin type system, such as Type Classes, Union Types, Type Refinements, and many other extensions that make Functional Programming easier in Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>Type Proofs is a new compiler plugin built on Arrow Meta enabling new features in the Kotlin type system, such as Type Classes, Union Types, Type Refinements, and many other extensions that make Functional Programming easier in Kotlin.</p><p>Type Proofs propositions are expressed as extension functions that unlock new relationships between types ad-hoc whilst remaining fully compatible with subtype polymorphism and the existing inheritance type system.</p><p>This talk demonstrates some of the new features the Arrow team is introducing in Arrow at the type level and IDE and how others can benefit from them when building libraries and applications.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android architectures with Arrow Fx]]></title>
        <id>https://arrow-kt.io/community/blog/2020/05/06/android-architectures-arrow-fx</id>
        <link href="https://arrow-kt.io/community/blog/2020/05/06/android-architectures-arrow-fx"/>
        <updated>2020-05-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[May 2020 Online Kotlin Meetup]]></summary>
        <content type="html"><![CDATA[<p>May 2020 Online Kotlin Meetup</p><p>Daniel Montoya Ramos - Senior Software Engineer @47deg
Android Jetpack Compose</p><p>Dani will show a new way of building UI's in Android using Jetpack Compose, comparing Imperative vs Declarative approaches. He'll look at managing state changes, composing functions as well as some of the gotchas and wishes for the future.</p><p>Alberto Ballano - Senior Software Engineer @47deg
Android architectures with Arrow Fx</p><p>Alberto will talk about typical Android architectures, and how can they benefit from Functional Programming techniques available in Arrow.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing a Kotlin Compiler Plugin with Arrow Meta]]></title>
        <id>https://arrow-kt.io/community/blog/2020/04/08/writing-compiler-plugin-with-with-arrow-meta</id>
        <link href="https://arrow-kt.io/community/blog/2020/04/08/writing-compiler-plugin-with-with-arrow-meta"/>
        <updated>2020-04-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn how to write and test the debuglog compiler plugin in Arrow Meta. Here is the compiler plugin debulog-arrow-meta explained in the article.]]></summary>
        <content type="html"><![CDATA[<p>Learn how to write and test the <a href="https://github.com/kevinmost/debuglog" target="_blank" rel="noopener noreferrer">debuglog</a> compiler plugin in Arrow Meta. Here is the compiler plugin <a href="https://github.com/msya/debuglog-arrow-meta" target="_blank" rel="noopener noreferrer">debulog-arrow-meta</a> explained in the article.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Template-Oriented-Programming to Ship Faster, Part-1]]></title>
        <id>https://arrow-kt.io/community/blog/2020/04/06/template-oriented-programming-talk</id>
        <link href="https://arrow-kt.io/community/blog/2020/04/06/template-oriented-programming-talk"/>
        <updated>2020-04-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn about the magic of Ad-hoc polymorphism using Arrow typeclasses with simple examples.]]></summary>
        <content type="html"><![CDATA[<p>Learn about the magic of Ad-hoc polymorphism using Arrow typeclasses with simple examples.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Template-Oriented-Programming to Ship Faster]]></title>
        <id>https://arrow-kt.io/community/blog/2020/04/06/template-oriented-programming</id>
        <link href="https://arrow-kt.io/community/blog/2020/04/06/template-oriented-programming"/>
        <updated>2020-04-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[With a POC using Spring-fu + Kotlin + Arrow, let's Convert Monomorphic code (for common use-cases such as Auth, Validation) to Polymorphic reusable templates, to be reused among heterogeneous services built on different tech-stacks (blocking/non-blocking). This helps accelerate feature development.]]></summary>
        <content type="html"><![CDATA[<p>With a POC using Spring-fu + Kotlin + Arrow, let's Convert Monomorphic code (for common use-cases such as Auth, Validation) to Polymorphic reusable templates, to be reused among heterogeneous services built on different tech-stacks (blocking/non-blocking). This helps accelerate feature development.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Explaining the Arrow Android sample]]></title>
        <id>https://arrow-kt.io/community/blog/2020/04/01/explaining-arrow-android-sample</id>
        <link href="https://arrow-kt.io/community/blog/2020/04/01/explaining-arrow-android-sample"/>
        <updated>2020-04-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow is an exciting development for Kotlin developers interested in functional programming and, more broadly, pushing the limits of the Kotlin compiler.]]></summary>
        <content type="html"><![CDATA[<p>Arrow is an exciting development for Kotlin developers interested in functional programming and, more broadly, pushing the limits of the Kotlin compiler.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IO integration with kotlinx.coroutines]]></title>
        <id>https://arrow-kt.io/community/blog/2020/03/02/io-integration-kotlinx-coroutines</id>
        <link href="https://arrow-kt.io/community/blog/2020/03/02/io-integration-kotlinx-coroutines"/>
        <updated>2020-03-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article showcases the brand new Arrow integration module for KotlinX Coroutines included in the Arrow 0.10.5 release.]]></summary>
        <content type="html"><![CDATA[<p>This article showcases the brand new Arrow integration module for KotlinX Coroutines included in the Arrow 0.10.5 release.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[FP with Kotlin/Arrow: Monad Comprehensions & Parallel Processing]]></title>
        <id>https://arrow-kt.io/community/blog/2020/02/26/fp-with-kotlin-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2020/02/26/fp-with-kotlin-arrow"/>
        <updated>2020-02-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow has multiple libraries available for functional programming. In this talk we'll focus on Arrow FX and learn how to handle IO in a functional way with an introduction to monadic composition. Then we'll examine how to compose monads in a cleaner fashion with Arrow FX's monad comprehensions. Finally, we'll take a look at how to parallelize IO monads with parallel map strategies.]]></summary>
        <content type="html"><![CDATA[<p>Arrow has multiple libraries available for functional programming. In this talk we'll focus on Arrow FX and learn how to handle IO in a functional way with an introduction to monadic composition. Then we'll examine how to compose monads in a cleaner fashion with Arrow FX's monad comprehensions. Finally, we'll take a look at how to parallelize IO monads with parallel map strategies.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What could possibly go wrong? - A safer programming with Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2020/02/26/safer-programming-with-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2020/02/26/safer-programming-with-arrow"/>
        <updated>2020-02-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Your Kotlin app grabs data from an API, transforms it and saves the processed data in a database. However, there are so many things that could go wrong at runtime treat your impure functions as computations with context, pass them around just like other values, and make the necessary unsafe invocation from a single point of your app, your main function.]]></summary>
        <content type="html"><![CDATA[<p>Your Kotlin app grabs data from an API, transforms it and saves the processed data in a database. However, there are so many things that could go wrong at runtime: the API might be inaccessible, the data is not what you expected or the data can't be persisted in the database. You can start adding try catch blocks to your function in your objects, but there is a better way to do it: treat your impure functions as computations with context, pass them around just like other values, and make the necessary unsafe invocation from a single point of your app, your main function.</p><p>This talk will walk you through the core functional concepts of Arrow, you will learn how Some, Either and even IO are functor, applicative and monad. You can use the code example from this talk as a starting point for your Arrow-learning, to write safer, simpler and more elegant functional code in Kotlin.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kotlin Functional Programming: Cleaner Composition with Monad Comprehensions in Arrow Fx]]></title>
        <id>https://arrow-kt.io/community/blog/2020/01/29/cleaner-composition-with-monad-comprehensions-arrow-fx</id>
        <link href="https://arrow-kt.io/community/blog/2020/01/29/cleaner-composition-with-monad-comprehensions-arrow-fx"/>
        <updated>2020-01-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn how to write cleaner monadic composition in Kotlin with Arrow’s monad comprehensions, available in Arrow FX.]]></summary>
        <content type="html"><![CDATA[<p>Learn how to write cleaner monadic composition in Kotlin with Arrow’s monad comprehensions, available in Arrow FX.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kotlin Functional Programming: Monads & Composition with Arrow Fx]]></title>
        <id>https://arrow-kt.io/community/blog/2020/01/29/monads-and-composition-with-arrow-fx</id>
        <link href="https://arrow-kt.io/community/blog/2020/01/29/monads-and-composition-with-arrow-fx"/>
        <updated>2020-01-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow is a library created by folks over at a company called  47 degrees . In a nutshell, Arrow brings a slew of functional programming features to Kotlin. It is heavily inspired by Scala and Haskell, and emphasizes a lot of the concepts that those languages started]]></summary>
        <content type="html"><![CDATA[<p>Arrow is a library created by folks over at a company called  47 degrees . In a nutshell, Arrow brings a slew of functional programming features to Kotlin. It is heavily inspired by Scala and Haskell, and emphasizes a lot of the concepts that those languages started</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx]]></title>
        <id>https://arrow-kt.io/community/blog/2020/01/29/parallel-processing-the-functional-way-with-arrow-fx</id>
        <link href="https://arrow-kt.io/community/blog/2020/01/29/parallel-processing-the-functional-way-with-arrow-fx"/>
        <updated>2020-01-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn how to handle parallel processing in Kotlin with Arrow IO monads.]]></summary>
        <content type="html"><![CDATA[<p>Learn how to handle parallel processing in Kotlin with Arrow IO monads.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow Comonad Approach for GameOfLife with Android Compose]]></title>
        <id>https://arrow-kt.io/community/blog/2020/01/14/Arrow-Comonad-Android-Compose-gameOfLife</id>
        <link href="https://arrow-kt.io/community/blog/2020/01/14/Arrow-Comonad-Android-Compose-gameOfLife"/>
        <updated>2020-01-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The purpose of this article is complement the bow + SwifUi solution for the game of live we can find here https://www.47deg.com/blog/conway-swift/ with the arrow + compose version.]]></summary>
        <content type="html"><![CDATA[<p>The purpose of this article is complement the bow + SwifUi solution for the game of live we can find here <a href="https://www.47deg.com/blog/conway-swift/" target="_blank" rel="noopener noreferrer">https://www.47deg.com/blog/conway-swift/</a> with the arrow + compose version.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kotlin coroutines with arrow-fx]]></title>
        <id>https://arrow-kt.io/community/blog/2019/12/15/Kotlin-coroutines-with-arrow-fx</id>
        <link href="https://arrow-kt.io/community/blog/2019/12/15/Kotlin-coroutines-with-arrow-fx"/>
        <updated>2019-12-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The purpose of this article is to summarize the approaches from questions at Slack about the usage of Either, Option and other datatypes and to give a tour of arrow-fx usage and APIs.]]></summary>
        <content type="html"><![CDATA[<p>The purpose of this article is to summarize the approaches from questions at Slack about the usage of Either, Option and other datatypes and to give a tour of arrow-fx usage and APIs.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Conway's Game of Life using Kotlin and Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2019/12/12/GOL-using-Kotlin-and-Arrow</id>
        <link href="https://arrow-kt.io/community/blog/2019/12/12/GOL-using-Kotlin-and-Arrow"/>
        <updated>2019-12-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An article of a series on Functional Programming solutions for the Global Day of Coderetreat challenge. In this case, it shows an approach for it using Kotlin and Functional Programming provided by the Arrow library.]]></summary>
        <content type="html"><![CDATA[<p>An article of a series on Functional Programming solutions for the Global Day of Coderetreat challenge. In this case, it shows an approach for it using Kotlin and Functional Programming provided by the Arrow library.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keep insisting - Arrow Meta]]></title>
        <id>https://arrow-kt.io/community/blog/2019/12/06/kotlinconf-arrow-meta</id>
        <link href="https://arrow-kt.io/community/blog/2019/12/06/kotlinconf-arrow-meta"/>
        <updated>2019-12-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow Meta is a library that empowers library and application authors with the ability to write plugins for the Kotlin compiler. Compiler plugins have access to all compiler phases and can intercept and modify the AST, descriptors, and IR intermediate lang for bytecode generation.]]></summary>
        <content type="html"><![CDATA[<p>Arrow Meta is a library that empowers library and application authors with the ability to write plugins for the Kotlin compiler. Compiler plugins have access to all compiler phases and can intercept and modify the AST, descriptors, and IR intermediate lang for bytecode generation.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow Fx & Arrow Meta - Functional Programming for the masses]]></title>
        <id>https://arrow-kt.io/community/blog/2019/11/27/functional-jvm-arrow-fx-meta</id>
        <link href="https://arrow-kt.io/community/blog/2019/11/27/functional-jvm-arrow-fx-meta"/>
        <updated>2019-11-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this meetup we discuss the new features of Arrow Fx to write “effectful” programs with an emphasis on simple and declarative programming for everyone.]]></summary>
        <content type="html"><![CDATA[<p>In this meetup we discuss the new features of Arrow Fx to write “effectful” programs with an emphasis on simple and declarative programming for everyone.
Additionally, we see how Arrow Meta works and how we can use it to improve the ergonomics of Functional Programming in Kotlin.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow Meta - Enabling Functional Programming in the Kotlin Compiler]]></title>
        <id>https://arrow-kt.io/community/blog/2019/10/18/lambda-world-arrow-meta</id>
        <link href="https://arrow-kt.io/community/blog/2019/10/18/lambda-world-arrow-meta"/>
        <updated>2019-10-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow Meta is a library that empowers library and application authors with the ability to write plugins for the Kotlin compiler. Compiler plugins have access to all compiler phases and can intercept and modify the AST, descriptors, and IR intermediate lang for bytecode generation.]]></summary>
        <content type="html"><![CDATA[<p>Arrow Meta is a library that empowers library and application authors with the ability to write plugins for the Kotlin compiler. Compiler plugins have access to all compiler phases and can intercept and modify the AST, descriptors, and IR intermediate lang for bytecode generation.</p>]]></content>
        <category label="meta" term="meta"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kotlin and Arrow: the functional way]]></title>
        <id>https://arrow-kt.io/community/blog/2019/08/08/kotlin-and-arrow-the-functional-way</id>
        <link href="https://arrow-kt.io/community/blog/2019/08/08/kotlin-and-arrow-the-functional-way"/>
        <updated>2019-08-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Kotlin is a great language for developing server-side applications; it's an object-oriented language and also a functional one, supporting features such as function types, lambdas or higher order functions. But...is this enough to switch completely from an imperative paradigm to a functional paradigm?]]></summary>
        <content type="html"><![CDATA[<p>Kotlin is a great language for developing server-side applications; it's an object-oriented language and also a functional one, supporting features such as function types, lambdas or higher order functions. But...is this enough to switch completely from an imperative paradigm to a functional paradigm?</p><p>In this talk by Noe Luaces, we'll see how features from Arrow library completes Kotlin in order to follow a pure functional way.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Effect polymorphism with Arrow FX]]></title>
        <id>https://arrow-kt.io/community/blog/2019/07/22/polymorphic-fx</id>
        <link href="https://arrow-kt.io/community/blog/2019/07/22/polymorphic-fx"/>
        <updated>2019-07-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Wonder how to handle side effects in a very clean way while abstracting the real effect implementation? #Arrow #FX provides an easy way to do this, without the burden of Higher-Kinded Types.]]></summary>
        <content type="html"><![CDATA[<p>Wonder how to handle side effects in a very clean way while abstracting the real effect implementation? #Arrow #FX provides an easy way to do this, without the burden of Higher-Kinded Types.</p>]]></content>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Self-contained example of testing with modules and Arrow FX]]></title>
        <id>https://arrow-kt.io/community/blog/2019/07/05/testing-with-modules</id>
        <link href="https://arrow-kt.io/community/blog/2019/07/05/testing-with-modules"/>
        <updated>2019-07-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This post shows a porting with Kotlin and Arrow FX of a self-contained testing example with Scala ZIO]]></summary>
        <content type="html"><![CDATA[<p>This post shows a porting with Kotlin and Arrow FX of a self-contained testing example with Scala ZIO</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Modular functional programming with Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2019/07/02/modular-app-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2019/07/02/modular-app-kotlin"/>
        <updated>2019-07-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This post proposes a possible solution in order to structure and compose a pure functional Kotlin application, in order to better manage and decouple modules, get simpler tests and manage the Dependency Injection at compile time.]]></summary>
        <content type="html"><![CDATA[<p>This post proposes a possible solution in order to structure and compose a pure functional Kotlin application, in order to better manage and decouple modules, get simpler tests and manage the Dependency Injection at compile time.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ArrowFx: Functional Programming for the masses]]></title>
        <id>https://arrow-kt.io/community/blog/2019/06/07/kotliners-arrow-fx</id>
        <link href="https://arrow-kt.io/community/blog/2019/06/07/kotliners-arrow-fx"/>
        <updated>2019-06-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this talk we recap about the imminent future of Functional Programming in Kotlin. With ArrowFx you are able to encode “effectful” programs in a controlled way following the FP principles through a direct syntax. You’ll think you’re writing imperative code!]]></summary>
        <content type="html"><![CDATA[<p>In this talk we recap about the imminent future of Functional Programming in Kotlin. With ArrowFx you are able to encode “effectful” programs in a controlled way following the FP principles through a direct syntax. You’ll think you’re writing imperative code!</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[How KEEP-87 & Typeclasses will change the way we write Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2019/06/04/keep-87-and-typeclasses</id>
        <link href="https://arrow-kt.io/community/blog/2019/06/04/keep-87-and-typeclasses"/>
        <updated>2019-06-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Short introduction into the proposal KEEP-87 and how it would be able to improve the language.]]></summary>
        <content type="html"><![CDATA[<p>Short introduction into the proposal <a href="https://github.com/Kotlin/KEEP/pull/87" target="_blank" rel="noopener noreferrer">KEEP-87</a> and how it would be able to improve the language.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing Arrow Playground]]></title>
        <id>https://arrow-kt.io/community/blog/2019/04/11/introducing-arrow-playground</id>
        <link href="https://arrow-kt.io/community/blog/2019/04/11/introducing-arrow-playground"/>
        <updated>2019-04-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Arrow Playground is a JavaScript library that creates Kotlin-aware, including Arrow, editors capable of running code from HTML block elements. This is a fork of the original Kotlin Playground work done by the JetBrains team.]]></summary>
        <content type="html"><![CDATA[<p>Arrow Playground is a JavaScript library that creates Kotlin-aware, including Arrow, editors capable of running code from HTML block elements. This is a fork of the original Kotlin Playground work done by the JetBrains team.</p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Immutable Conversations - Past and Future of Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2019/03/12/immutable-conv-1</id>
        <link href="https://arrow-kt.io/community/blog/2019/03/12/immutable-conv-1"/>
        <updated>2019-03-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we capture a conversation between Arrow maintainers Raúl Raja and Paco Estevez as they discuss the past and future of the library which is designed to bring Functional Programming to Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>In this episode, we capture a conversation between Arrow maintainers Raúl Raja and Paco Estevez as they discuss the past and future of the library which is designed to bring Functional Programming to Kotlin.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[From Imperative to Functional Programming using Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2019/02/10/imperative-functional-programming-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2019/02/10/imperative-functional-programming-arrow"/>
        <updated>2019-02-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[As its name implies, From Imperative to Functional Programming using Arrow is a tale about migrating a simple Kotlin application written in imperative style to a fully function application with the help of the Arrow library.]]></summary>
        <content type="html"><![CDATA[<p>As its name implies, <a href="https://blog.frankel.ch/imperative-functional-programming/1/" target="_blank" rel="noopener noreferrer">From Imperative to Functional Programming using Arrow</a> is a tale about migrating a simple Kotlin application written in imperative style to a fully function application with the help of the Arrow library.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="tutorials" term="tutorials"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Webflux with Kotlin and Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2019/02/03/arrow-webflux</id>
        <link href="https://arrow-kt.io/community/blog/2019/02/03/arrow-webflux"/>
        <updated>2019-02-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Webflux with Kotlin and Arrow shows how you can use Arrow together with Spring Webflux to create a reactive REST application. This article explains how to use the MonoK and the FluxK Arrow extensions together with the binding function to make working with the Mono and Flux reactor constructs much easier and better understandable.]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.smartjava.org/content/webflux-arrow/" target="_blank" rel="noopener noreferrer">Webflux with Kotlin and Arrow</a> shows how you can use Arrow together with Spring Webflux to create a reactive REST application. This article explains how to use the <code>MonoK</code> and the <code>FluxK</code> Arrow extensions together with the <code>binding</code> function to make working with the <code>Mono</code> and <code>Flux</code> reactor constructs much easier and better understandable.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting started with FP in Kotlin and Arrow: Typeclasses]]></title>
        <id>https://arrow-kt.io/community/blog/2019/01/03/getting-started</id>
        <link href="https://arrow-kt.io/community/blog/2019/01/03/getting-started"/>
        <updated>2019-01-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with FP in Kotlin and Arrow: Typeclasses explores part of the Arrow library by explaining how you can use Arrow to create your own typeclasses and use the ones provided by Arrow to make your code more concise and better readable.]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.smartjava.org/content/kotlin-arrow-typeclasses/" target="_blank" rel="noopener noreferrer">Getting started with FP in Kotlin and Arrow: Typeclasses</a> explores part of the Arrow library by explaining how you can use Arrow to create your own typeclasses and use the ones provided by Arrow to make your code more concise and better readable.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Hangman Game written with Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2018/11/30/hangman</id>
        <link href="https://arrow-kt.io/community/blog/2018/11/30/hangman"/>
        <updated>2018-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Functional Hangman game - console application written with Arrow. Uses the IO monad to push side effects to the edge of the system.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://lordraydenmk.github.io/2018/functional-hangman-in-kotlin-with-arrow/" target="_blank" rel="noopener noreferrer">Functional Hangman</a> game - console application written with Arrow. Uses the <code>IO&lt;A&gt;</code> monad to push side effects to the edge of the system.</p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manual documentation is dead. Long live automated documentation! Automated documentation with ANK]]></title>
        <id>https://arrow-kt.io/community/blog/2018/11/24/ank</id>
        <link href="https://arrow-kt.io/community/blog/2018/11/24/ank"/>
        <updated>2018-11-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[It includes how the ANK plugin works: from having a tool that evaluates and verifies your doc snippets at compile time, to generating code documentation that is always correct and up to date.]]></summary>
        <content type="html"><![CDATA[<p>It includes how the ANK plugin works: from having a tool that evaluates and verifies your doc snippets at compile time, to generating code documentation that is always correct and up to date.</p>]]></content>
        <category label="core" term="core"/>
        <category label="incubator" term="incubator"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Simple Dependency Management in Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2018/11/07/simple-management-dependency</id>
        <link href="https://arrow-kt.io/community/blog/2018/11/07/simple-management-dependency"/>
        <updated>2018-11-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this talk we introduce the concepts of Dependency Management as a language feature, typeclasses, and a live demo of KEEP-87. You can follow along the example in this folder.]]></summary>
        <content type="html"><![CDATA[<p>In this talk we introduce the concepts of Dependency Management as a language feature, typeclasses, and a live demo of <a href="https://github.com/Kotlin/KEEP/pull/87" target="_blank" rel="noopener noreferrer">KEEP-87</a>. You can follow along the example in <a href="https://github.com/arrow-kt/arrow/tree/master/modules/docs/arrow-examples/src/test/kotlin/arrow/typeclasses" target="_blank" rel="noopener noreferrer">this folder</a>.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Polyjokes  -  A polymorphic approach using Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2018/10/21/polyjokes</id>
        <link href="https://arrow-kt.io/community/blog/2018/10/21/polyjokes"/>
        <updated>2018-10-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@dcampogiani is using a polymorphic approach to retrieve a random user and then a joke about him.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/dcampogiani" target="_blank" rel="noopener noreferrer">@dcampogiani</a> is using a polymorphic approach to retrieve a random user and then a joke about him.</p><p><a href="https://github.com/dcampogiani/polyjokes" target="_blank" rel="noopener noreferrer">Polyjokes — A polymorphic approach using Arrow</a></p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Architecting Typed FP Applications & Libraries in Kotlin with Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2018/10/05/kotlin-conf-fp-in-kotlin-with-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2018/10/05/kotlin-conf-fp-in-kotlin-with-arrow"/>
        <updated>2018-10-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This talk includes a comprehensive walkthrough of the most important patterns covered by the data types and type classes we find in Arrow. Each pattern will be accompanied by code examples that illustrate how Arrow brings Typed Functional Programming to Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>This talk includes a comprehensive walkthrough of the most important patterns covered by the data types and type classes we find in Arrow. Each pattern will be accompanied by code examples that illustrate how Arrow brings Typed Functional Programming to Kotlin.</p><p><a href="https://github.com/47deg/arrow-architecture" target="_blank" rel="noopener noreferrer">Sources and slides</a></p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow and Functional Programming for Kotlin Developers]]></title>
        <id>https://arrow-kt.io/community/blog/2018/07/24/arrow-fp-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2018/07/24/arrow-fp-kotlin"/>
        <updated>2018-07-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A beginner level introduction to Functional Programming for Kotlin and/or Android Developers or developers with OOP background.]]></summary>
        <content type="html"><![CDATA[<p>A beginner level introduction to Functional Programming for Kotlin and/or Android Developers or developers with OOP background.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Programming in Kotlin with Arrow by Emmanuel Nhan]]></title>
        <id>https://arrow-kt.io/community/blog/2018/06/27/fp-kotlin-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2018/06/27/fp-kotlin-arrow"/>
        <updated>2018-06-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@nhanmanu introduces Kotlin and how it is a good fit for functional programming. The talk goes through some interesting features of Kotlin, then show how to use them to enter the world of Higher Kinds and Typeclasses. In the last part, we explore some Arrow capabilities & built-in syntax, using validation as an example.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://twitter.com/nhanmanu" target="_blank" rel="noopener noreferrer">@nhanmanu</a> introduces Kotlin and how it is a good fit for functional programming. The talk goes through some interesting features of Kotlin, then show how to use them to enter the world of Higher Kinds and Typeclasses. In the last part, we explore some Arrow capabilities &amp; built-in syntax, using validation as an example.</p>]]></content>
        <category label="core" term="core"/>
        <category label="slidedecks" term="slidedecks"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arrow 101  -  Building an Android app using Functional Programming]]></title>
        <id>https://arrow-kt.io/community/blog/2018/06/24/arrow-101</id>
        <link href="https://arrow-kt.io/community/blog/2018/06/24/arrow-101"/>
        <updated>2018-06-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Leandro Ferreira presents how to build a simple app using Arrow and how to implement solutions with Semigroups.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://twitter.com/mLeandroBF" target="_blank" rel="noopener noreferrer">Leandro Ferreira</a> presents how to build a simple app using Arrow and how to implement solutions with Semigroups.</p><p><a href="https://medium.com/@lehen01/arrow-101-building-an-android-app-using-functional-programming-fe959675d96d" target="_blank" rel="noopener noreferrer">Arrow 101 — Building an Android app using Functional Programming</a></p><p><a href="https://medium.com/@lehen01/arrow-101-modelling-a-real-world-problem-with-semigroups-d8f22cdf54c" target="_blank" rel="noopener noreferrer">Arrow 101 — Modelling a real world problem with Semigroups</a></p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[State of the functional ecosystem in Kotlin: Mid 2018 checkup]]></title>
        <id>https://arrow-kt.io/community/blog/2018/06/24/state-ecosystem</id>
        <link href="https://arrow-kt.io/community/blog/2018/06/24/state-ecosystem"/>
        <updated>2018-06-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This talk focuses on the day-to-day problems Arrow solves, from small ideas to big concepts.]]></summary>
        <content type="html"><![CDATA[<p>This talk focuses on the day-to-day problems Arrow solves, from small ideas to big concepts.</p><p>It includes an overview of all the modules available, and some of the 3rd party libraries made by the community.</p>]]></content>
        <category label="core" term="core"/>
        <category label="optics" term="optics"/>
        <category label="fx" term="fx"/>
        <category label="incubator" term="incubator"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Higher Kinded Types in a Lower Kinded Language by Jacob Bass]]></title>
        <id>https://arrow-kt.io/community/blog/2018/06/22/hk-types</id>
        <link href="https://arrow-kt.io/community/blog/2018/06/22/hk-types"/>
        <updated>2018-06-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[It's hard coming back down to the earth of a JVM based language after spending time with Haskell and OCaml. This talk will discuss functional programming in Kotlin with the Arrow library, how the abstractions it provides can improve your code, and how this magic that provides higher-kinded types works under the hood.]]></summary>
        <content type="html"><![CDATA[<p>It's hard coming back down to the earth of a JVM based language after spending time with Haskell and OCaml. This talk will discuss functional programming in Kotlin with the Arrow library, how the abstractions it provides can improve your code, and how this magic that provides higher-kinded types works under the hood.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[1/n - How do I… in FP: Validation]]></title>
        <id>https://arrow-kt.io/community/blog/2018/04/23/how-do-i</id>
        <link href="https://arrow-kt.io/community/blog/2018/04/23/how-do-i"/>
        <updated>2018-04-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Emmanuel Nhan showcases different approaches to validation including examples for ValidatedNel from Arrow in this great and in depth post using Kafka Streams Config parameters as example.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.enhan.eu/author/enhan/" target="_blank" rel="noopener noreferrer">Emmanuel Nhan</a> showcases different approaches to validation including examples for <code>ValidatedNel</code> from Arrow in this great and in depth post using Kafka Streams Config parameters as example.</p><p><a href="https://www.enhan.eu/how-to-in-fp/" target="_blank" rel="noopener noreferrer">1/n - How do I… in FP: Validation</a></p>]]></content>
        <category label="core" term="core"/>
        <category label="tutorials" term="tutorials"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android Functional Validation]]></title>
        <id>https://arrow-kt.io/community/blog/2018/04/14/android-functional-validation</id>
        <link href="https://arrow-kt.io/community/blog/2018/04/14/android-functional-validation"/>
        <updated>2018-04-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@dcampogiani explores some data types in Arrow and uses them to validate a form on Android.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/dcampogiani" target="_blank" rel="noopener noreferrer">@dcampogiani</a> explores some data types in Arrow and uses them to validate a form on Android.</p><p><a href="https://player.vimeo.com/video/279931528" target="_blank" rel="noopener noreferrer">Video (in italian)</a></p><ul><li><a href="http://danielecampogiani.com/blog/2018/02/android-functional-validation-1-intro/" target="_blank" rel="noopener noreferrer">Introduction</a></li><li><a href="http://danielecampogiani.com/blog/2018/02/android-functional-validation-2-option/" target="_blank" rel="noopener noreferrer">Option</a></li><li><a href="http://danielecampogiani.com/blog/2018/02/android-functional-validation-3-either/" target="_blank" rel="noopener noreferrer">Either</a></li><li><a href="http://danielecampogiani.com/blog/2018/02/android-functional-validation-4-validated/" target="_blank" rel="noopener noreferrer">Validated</a></li></ul>]]></content>
        <category label="core" term="core"/>
        <category label="tutorials" term="tutorials"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Kotlin Arrow by Jacob Bass]]></title>
        <id>https://arrow-kt.io/community/blog/2018/03/26/kotlin-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2018/03/26/kotlin-arrow"/>
        <updated>2018-03-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@bassjacob goes through how Funktionale and Kategory merged into Arrow, consolidating two of the most popular FP libraries in the Kotlin space into one powerhouse. The talk is an introduction to some FP concepts, how the libraries work, what features they bring to the table and where you might use them in your code.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/bassjacob" target="_blank" rel="noopener noreferrer">@bassjacob</a> goes through how Funktionale and Kategory merged into Arrow, consolidating two of the most popular FP libraries in the Kotlin space into one powerhouse. The talk is an introduction to some FP concepts, how the libraries work, what features they bring to the table and where you might use them in your code.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[It's all about morphisms]]></title>
        <id>https://arrow-kt.io/community/blog/2018/03/21/morphisms</id>
        <link href="https://arrow-kt.io/community/blog/2018/03/21/morphisms"/>
        <updated>2018-03-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@uberto gives a gentle introduction to Category Theory for programmers used to OOP but interested in Functional Programming. No Haskell knowledge required. We will explain main concepts behind functional programming with many diagrams and simple metaphors and examples. Some code will clarify how to translate these ideas in programs.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/uberto" target="_blank" rel="noopener noreferrer">@uberto</a> gives a gentle introduction to Category Theory for programmers used to OOP but interested in Functional Programming. No Haskell knowledge required. We will explain main concepts behind functional programming with many diagrams and simple metaphors and examples. Some code will clarify how to translate these ideas in programs.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Optics and Type Classes in Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2018/01/17/optics-type-classes-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2018/01/17/optics-type-classes-arrow"/>
        <updated>2018-01-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@msya explains how to use various optics and type classes in Arrow. He discusses optics such as]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/msya" target="_blank" rel="noopener noreferrer">@msya</a> explains how to use various optics and type classes in Arrow. He discusses optics such as
<!-- -->[<code>Lens</code>]<!-- -->({{ '/docs/optics/lens' | relative_url }}) and <!-- -->[<code>Iso</code>]<!-- -->({{ '/docs/optics/iso' | relative_url }}). He also goes over the purpose for type classes and how <a href="https://github.com/Kotlin/KEEP/pull/87" target="_blank" rel="noopener noreferrer">KEEP-87</a> will make it easier to implement them.</p><p><a href="https://speakerdeck.com/heyitsmohit/functional-programming-with-arrow" target="_blank" rel="noopener noreferrer">Functional Programming with Arrow</a></p>]]></content>
        <category label="core" term="core"/>
        <category label="optics" term="optics"/>
        <category label="slidedecks" term="slidedecks"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Programming in Kotlin with Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2017/11/29/fp-kotlin-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2017/11/29/fp-kotlin-arrow"/>
        <updated>2017-11-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A rundown of all the features included in the library, focusing on implementation details.]]></summary>
        <content type="html"><![CDATA[<p>A rundown of all the features included in the library, focusing on implementation details.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a DSL… in Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2017/11/24/building-dsl-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2017/11/24/building-dsl-kotlin"/>
        <updated>2017-11-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Make DSLs stack safe, composable and reusable under different runtime requirements thanks to Arrow.]]></summary>
        <content type="html"><![CDATA[<p>Make DSLs stack safe, composable and reusable under different runtime requirements thanks to Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Happy path: Kotlin + Actors + Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2017/11/22/happy-path</id>
        <link href="https://arrow-kt.io/community/blog/2017/11/22/happy-path"/>
        <updated>2017-11-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@javipacheco creates a Proof of Concept architecture for Android using the Actor pattern and modelling the domain with Either.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/javipacheco" target="_blank" rel="noopener noreferrer">@javipacheco</a> creates a Proof of Concept architecture for Android using the Actor pattern and modelling the domain with <!-- -->[<code>Either</code>]<!-- -->({{ '<a href="https://arrow-kt.io/docs/apidocs/arrow-core-data/arrow.core/-either/'" target="_blank" rel="noopener noreferrer">https://arrow-kt.io/docs/apidocs/arrow-core-data/arrow.core/-either/'</a> | relative_url }}).</p><p><a href="https://medium.com/@javipacheco/happy-path-kotlin-actors-arrow-proof-of-concept-322e9099d2ea" target="_blank" rel="noopener noreferrer">Happy Path: Kotlin + Actors + Arrow</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Architectures Using Functional Programming Concepts]]></title>
        <id>https://arrow-kt.io/community/blog/2017/11/17/architectures</id>
        <link href="https://arrow-kt.io/community/blog/2017/11/17/architectures"/>
        <updated>2017-11-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introductory talk to Functional architectures to be built on top of Arrow.]]></summary>
        <content type="html"><![CDATA[<p>Introductory talk to Functional architectures to be built on top of Arrow.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kotlin for the Pragmatic Functionalist]]></title>
        <id>https://arrow-kt.io/community/blog/2017/11/09/pragmatic-functionalist</id>
        <link href="https://arrow-kt.io/community/blog/2017/11/09/pragmatic-functionalist"/>
        <updated>2017-11-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An introduction to Arrow and the enhancements it brings to Kotlin's standard library.]]></summary>
        <content type="html"><![CDATA[<p>An introduction to Arrow and the enhancements it brings to Kotlin's standard library.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Programming in Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2017/11/02/fp-kotlin</id>
        <link href="https://arrow-kt.io/community/blog/2017/11/02/fp-kotlin"/>
        <updated>2017-11-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An ongoing blog series introducing Functional Programming architectures from scratch]]></summary>
        <content type="html"><![CDATA[<p>An ongoing blog series introducing Functional Programming architectures from scratch</p><p><a href="https://medium.com/@JorgeCastilloPr/kotlin-functional-programming-does-it-make-sense-36ad07e6bacf" target="_blank" rel="noopener noreferrer">Kotlin Functional Programming: Does it make sense?</a></p><p><a href="https://medium.com/@JorgeCastilloPr/kotlin-functional-programming-i-monad-stack-518d1bd8fbee" target="_blank" rel="noopener noreferrer">Kotlin Functional Programming I: Monad Stack</a></p><p><a href="https://medium.com/@JorgeCastilloPr/kotlin-functional-programming-ii-monad-transformers-b1f020f14dd8" target="_blank" rel="noopener noreferrer">Kotlin Functional Programming II: Monad Transformers</a></p>]]></content>
        <category label="core" term="core"/>
        <category label="fx" term="fx"/>
        <category label="mtl" term="mtl"/>
        <category label="tutorials" term="tutorials"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional approach to Android architecture using Kotlin]]></title>
        <id>https://arrow-kt.io/community/blog/2017/10/20/functional-approach</id>
        <link href="https://arrow-kt.io/community/blog/2017/10/20/functional-approach"/>
        <updated>2017-10-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Move side effects to the edges of the system, implement a functional oriented architecture for Android apps based on purity.]]></summary>
        <content type="html"><![CDATA[<p>Move side effects to the edges of the system, implement a functional oriented architecture for Android apps based on purity.</p>]]></content>
        <category label="core" term="core"/>
        <category label="videos" term="videos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Handling exceptions in Arrow]]></title>
        <id>https://arrow-kt.io/community/blog/2017/09/17/handling-exceptions-arrow</id>
        <link href="https://arrow-kt.io/community/blog/2017/09/17/handling-exceptions-arrow"/>
        <updated>2017-09-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@uris77 explains how to use Try in real world examples.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/uris77" target="_blank" rel="noopener noreferrer">@uris77</a> explains how to use <a href="https://arrow-kt.io/docs/apidocs/arrow-core-data/arrow.core/-try/" target="_blank" rel="noopener noreferrer">Try</a> in real world examples.</p><p><a href="https://www.spantree.net/blog/2017/09/15/kotlin-exception-handling-with-kategory.html" target="_blank" rel="noopener noreferrer">Handling Kotlin Exceptions with Arrow – A Functional Approach</a></p>]]></content>
        <category label="core" term="core"/>
        <category label="articles" term="articles"/>
    </entry>
</feed>