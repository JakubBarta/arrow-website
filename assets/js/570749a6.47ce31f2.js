"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[5135],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,d=p["".concat(c,".").concat(m)]||p[m]||g[m]||a;return t?n.createElement(d,i(i({ref:r},u),{},{components:t})):n.createElement(d,i({ref:r},u))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},62489:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=t(87462),o=(t(67294),t(3905));const a={title:"Introducing Arrow Playground",image:"https://www.47deg.com/assets/img/blog/featured_images/2019-04-11-introducing-arrow-playground.png",category:"articles",tags:["core","articles"],link:"https://www.47deg.com/blog/arrow-playground/"},i=void 0,l={permalink:"/community/blog/2019/04/11/introducing-arrow-playground",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2019-04-11-introducing-arrow-playground.md",source:"@site/content/blog/2019-04-11-introducing-arrow-playground.md",title:"Introducing Arrow Playground",description:"Arrow Playground is a JavaScript library that creates Kotlin-aware, including Arrow, editors capable of running code from HTML block elements. This is a fork of the original Kotlin Playground work done by the JetBrains team.",date:"2019-04-11T00:00:00.000Z",formattedDate:"April 11, 2019",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.175,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Introducing Arrow Playground",image:"https://www.47deg.com/assets/img/blog/featured_images/2019-04-11-introducing-arrow-playground.png",category:"articles",tags:["core","articles"],link:"https://www.47deg.com/blog/arrow-playground/"},prevItem:{title:"How KEEP-87 & Typeclasses will change the way we write Kotlin",permalink:"/community/blog/2019/06/04/keep-87-and-typeclasses"},nextItem:{title:"Immutable Conversations - Past and Future of Arrow",permalink:"/community/blog/2019/03/12/immutable-conv-1"}},c={authorsImageUrls:[]},s=[],u={toc:s},p="wrapper";function g(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Arrow Playground is a JavaScript library that creates Kotlin-aware, including Arrow, editors capable of running code from HTML block elements. This is a fork of the original Kotlin Playground work done by the JetBrains team."))}g.isMDXComponent=!0}}]);