"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[3640],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),p=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||i;return r?o.createElement(m,a(a({ref:t},c),{},{components:r})):o.createElement(m,a({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,a[1]=s;for(var p=2;p<i;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},19558:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=r(87462),n=(r(67294),r(3905));const i={title:"Integrations",description:"Arrow comprises different libraries, each improving or extending one commonly-used library in the Kotlin ecosystem or a particular Kotlin language feature.",sidebar_position:10,sidebar_custom_props:{description:"Playing nice with the rest of the ecosystem",icon:"icon-generic-5.svg",overview:!0}},a="<decorated-text icon={frontMatter.sidebar_custom_props.icon} title={frontMatter.title} />",s={unversionedId:"learn/integrations",id:"learn/integrations",title:"Integrations",description:"Arrow comprises different libraries, each improving or extending one commonly-used library in the Kotlin ecosystem or a particular Kotlin language feature.",source:"@site/content/docs/learn/integrations.md",sourceDirName:"learn",slug:"/learn/integrations",permalink:"/learn/integrations",draft:!1,editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/docs/learn/integrations.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Integrations",description:"Arrow comprises different libraries, each improving or extending one commonly-used library in the Kotlin ecosystem or a particular Kotlin language feature.",sidebar_position:10,sidebar_custom_props:{description:"Playing nice with the rest of the ecosystem",icon:"icon-generic-5.svg",overview:!0}},sidebar:"learnSidebar",previous:{title:"Why suspend over IO",permalink:"/learn/design/suspend-io"},next:{title:"Summary",permalink:"/learn/summary"}},l={},p=[{value:"Testing",id:"testing",level:2},{value:"Kotest",id:"kotest",level:3},{value:"Serialization",id:"serialization",level:2},{value:"Jackson",id:"jackson",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Hoplite",id:"hoplite",level:3},{value:"HTTP",id:"http",level:2},{value:"Retrofit",id:"retrofit",level:3},{value:"Ktor",id:"ktor",level:3},{value:"kJWT",id:"kjwt",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"decorated-text-iconfrontmattersidebar_custom_propsicon-titlefrontmattertitle-"},(0,n.kt)("decorated-text",{icon:i.sidebar_custom_props.icon,title:i.title})),(0,n.kt)("p",null,"A library is more robust if it plays well with the rest of the ecosystem\nsurrounding it. Arrow integrates with many useful libraries in the Kotlin\necosystem. This is a non-exhaustive list, and we're happy to hear about support for\nArrow from other libraries."),(0,n.kt)("admonition",{title:"We'd love to hear from you!",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Do you maintain or know of a library with support for Arrow? Feel free to\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/arrow-kt/arrow/issues"},"open an issue")," in the repository, and we'll add it to this list. Thanks in advance! \ud83e\udd29")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"There's a ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/woltapp/arrow-detekt-rules"},"custom set of rules"),"\nfor ",(0,n.kt)("a",{parentName:"p",href:"https://detekt.dev/"},"Detekt")," that can help you refine your style when\nusing Arrow.")),(0,n.kt)("h2",{id:"testing"},"Testing"),(0,n.kt)("h3",{id:"kotest"},(0,n.kt)("a",{parentName:"h3",href:"https://kotest.io/"},"Kotest")),(0,n.kt)("p",null,"If you want to test the result of a function that uses a type defined in Arrow,\nlike ",(0,n.kt)("inlineCode",{parentName:"p"},"Either"),", you can use the ",(0,n.kt)("a",{parentName:"p",href:"https://kotest.io/docs/assertions/arrow.html"},"matchers"),"\nextension library. If you're using property-based testing (you should!), you can\nuse ",(0,n.kt)("a",{parentName:"p",href:"https://kotest.io/docs/proptest/property-test-generators-arrow.html"},"generators"),"\nfor Arrow types."),(0,n.kt)("h2",{id:"serialization"},"Serialization"),(0,n.kt)("h3",{id:"jackson"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/FasterXML/jackson"},"Jackson")),(0,n.kt)("p",null,"If you're using Jackson for serialization, ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/arrow-kt/arrow-integrations#jackson-module"},"this module"),"\nadds support for Arrow types. You just need to call an additional method when\ncreating the mapper."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"val mapper = ObjectMapper()\n    .registerKotlinModule()\n    .registerArrowModule()   // <- this is the one\n")),(0,n.kt)("h2",{id:"configuration"},"Configuration"),(0,n.kt)("h3",{id:"hoplite"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/sksamuel/hoplite"},"Hoplite")),(0,n.kt)("p",null,"Hoplite is a great library for handling configurations and supporting various sources, formats, and cascading setups. The library supports most\nArrow types for ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/sksamuel/hoplite#decoders"},"decoding"),"."),(0,n.kt)("h2",{id:"http"},"HTTP"),(0,n.kt)("h3",{id:"retrofit"},(0,n.kt)("a",{parentName:"h3",href:"https://square.github.io/retrofit/"},"Retrofit")),(0,n.kt)("p",null,"If Retrofit is your library of choice for querying HTTP services, this\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/arrow-kt/arrow/tree/main/arrow-libs/core/arrow-core-retrofit"},"small integration module"),"\nmay come in quite handy."),(0,n.kt)("h3",{id:"ktor"},(0,n.kt)("a",{parentName:"h3",href:"https://ktor.io/"},"Ktor")),(0,n.kt)("p",null,"For client or server purposes, you can set up Ktor to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/arrow-kt/arrow-integrations#ktor"},"use Jackson\nwith your custom mapper"),".\nThat way, you can access (de)serialization for Arrow types."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"install(ContentNegotiation) {\n  register(ContentType.Application.Json, JacksonConverter(JsonMapper.mapper))\n}\n")),(0,n.kt)("h3",{id:"kjwt"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/nefilim/kJWT"},"kJWT")),(0,n.kt)("p",null,"This library adds support for JSON Web Signatures and JSON Web Tokens\nto the Kotlin and Arrow ecosystems."))}d.isMDXComponent=!0}}]);