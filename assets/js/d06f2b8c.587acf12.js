"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[5107],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>g});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(r),f=o,g=p["".concat(s,".").concat(f)]||p[f]||u[f]||a;return r?n.createElement(g,i(i({ref:t},m),{},{components:r})):n.createElement(g,i({ref:t},m))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},16378:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-monad"},i=void 0,l={permalink:"/community/blog/2020/01/29/monads-and-composition-with-arrow-fx",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2020-01-29-monads-and-composition-with-arrow-fx.md",source:"@site/content/blog/2020-01-29-monads-and-composition-with-arrow-fx.md",title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",description:"Arrow is a library created by folks over at a company called  47 degrees . In a nutshell, Arrow brings a slew of functional programming features to Kotlin. It is heavily inspired by Scala and Haskell, and emphasizes a lot of the concepts that those languages started",date:"2020-01-29T00:00:00.000Z",formattedDate:"January 29, 2020",tags:[{label:"fx",permalink:"/community/blog/tags/fx"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.235,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-monad"},prevItem:{title:"Kotlin Functional Programming: Cleaner Composition with Monad Comprehensions in Arrow Fx",permalink:"/community/blog/2020/01/29/cleaner-composition-with-monad-comprehensions-arrow-fx"},nextItem:{title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",permalink:"/community/blog/2020/01/29/parallel-processing-the-functional-way-with-arrow-fx"}},s={authorsImageUrls:[]},c=[],m={toc:c},p="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Arrow is a library created by folks over at a company called  47 degrees . In a nutshell, Arrow brings a slew of functional programming features to Kotlin. It is heavily inspired by Scala and Haskell, and emphasizes a lot of the concepts that those languages started"))}u.isMDXComponent=!0}}]);