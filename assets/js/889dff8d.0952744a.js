"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[2824],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=r,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return n?o.createElement(d,i(i({ref:t},p),{},{components:n})):o.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},79736:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={sidebar_position:1,description:"Working with collections with at least one element"},i="Non-empty collections",l={unversionedId:"learn/collections-functions/non-empty",id:"learn/collections-functions/non-empty",title:"Non-empty collections",description:"Working with collections with at least one element",source:"@site/content/docs/learn/collections-functions/non-empty.md",sourceDirName:"learn/collections-functions",slug:"/learn/collections-functions/non-empty",permalink:"/learn/collections-functions/non-empty",draft:!1,editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/docs/learn/collections-functions/non-empty.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Working with collections with at least one element"},sidebar:"learnSidebar",previous:{title:"Collections and functions",permalink:"/learn/collections-functions/"},next:{title:"Recursive functions",permalink:"/learn/collections-functions/recursive"}},c={},s=[],p={toc:s},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"non-empty-collections"},"Non-empty collections"),(0,r.kt)("p",null,"Nullable types give us the ability to have zero or one appearance of a value,\ncollections allow us to have any number of them. However, in some scenarios, we need to work with collections that should contain ",(0,r.kt)("strong",{parentName:"p"},"at least one")," element. Arrow provides both ",(0,r.kt)("a",{parentName:"p",href:"https://apidocs.arrow-kt.io/arrow-core/arrow.core/-non-empty-list/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"NonEmptyList")),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://apidocs.arrow-kt.io/arrow-core/arrow.core/-non-empty-set/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"NonEmptySet")),"."),(0,r.kt)("p",null,"One concrete example is given by ",(0,r.kt)("a",{parentName:"p",href:"../../typed-errors/working-with-typed-errors/#accumulating-errors"},"error accumulation"),".\nA type like ",(0,r.kt)("inlineCode",{parentName:"p"},"Either<List<Problem>, Result>")," may take us to the weird case in\nwhich we end with ",(0,r.kt)("inlineCode",{parentName:"p"},"Left"),", but we have no ",(0,r.kt)("inlineCode",{parentName:"p"},"Problem"),"s in the ",(0,r.kt)("inlineCode",{parentName:"p"},"List"),". To avoid\nthis issue, Arrow makes ",(0,r.kt)("inlineCode",{parentName:"p"},"mapOrAccumulate")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"zipOrAccumulate")," return\n",(0,r.kt)("inlineCode",{parentName:"p"},"Either<NonEmptyList<Problem>, Result>")," instead."),(0,r.kt)("p",null,"The API of non-empty collections follows the conventions from ",(0,r.kt)("a",{parentName:"p",href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/"},(0,r.kt)("inlineCode",{parentName:"a"},"kotlin.collections")),".\nOn top of that, some types become stronger to ensure or keep track of the\nnon-empty nature of the collection."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://apidocs.arrow-kt.io/arrow-core/arrow.core/non-empty-list-of.html"},(0,r.kt)("inlineCode",{parentName:"a"},"nonEmptyListOf"))," and ",(0,r.kt)("a",{parentName:"li",href:"https://apidocs.arrow-kt.io/arrow-core/arrow.core/non-empty-set-of.html"},(0,r.kt)("inlineCode",{parentName:"a"},"nonEmptySetOf"))," require at least one value as argument."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"map"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"zip"),", and similar operations which respect the size of the arguments\nreturn non-empty collections."),(0,r.kt)("li",{parentName:"ul"},"Concatenation where one of the arguments is non-empty ensures that the result\nis also non-empty.")))}u.isMDXComponent=!0}}]);