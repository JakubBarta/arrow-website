"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[7061],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,d=u["".concat(c,".").concat(m)]||u[m]||y[m]||o;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},45417:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={title:"Super-charge your build with Arrow Analysis by Alejandro Serrano Mena",image:"http://i3.ytimg.com/vi/yCZtnzTnpRA/hqdefault.jpg",category:"videos",tags:["analysis","videos"],link:"https://youtu.be/yCZtnzTnpRA",event:"Kotlin Dev Day"},i=void 0,l={permalink:"/community/blog/2022/05/30/super-charge-build-arrow-analysis",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2022-05-30-super-charge-build-arrow-analysis.md",source:"@site/content/blog/2022-05-30-super-charge-build-arrow-analysis.md",title:"Super-charge your build with Arrow Analysis by Alejandro Serrano Mena",description:"Alejandro Serrano presents Arrow Analysis, a Kotlin compiler plug-in that does pre-and post-condition and type invariant checking at compile time.",date:"2022-05-30T00:00:00.000Z",formattedDate:"May 30, 2022",tags:[{label:"analysis",permalink:"/community/blog/tags/analysis"},{label:"videos",permalink:"/community/blog/tags/videos"}],readingTime:.1,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Super-charge your build with Arrow Analysis by Alejandro Serrano Mena",image:"http://i3.ytimg.com/vi/yCZtnzTnpRA/hqdefault.jpg",category:"videos",tags:["analysis","videos"],link:"https://youtu.be/yCZtnzTnpRA",event:"Kotlin Dev Day"},prevItem:{title:"Extending kotlinx.serialization functionality with Arrow Meta with Karin-Aleksandra Monoid",permalink:"/community/blog/2022/05/30/extending-kotlinx-serialization-functionality-arrow-meta"},nextItem:{title:"Functional programming in Kotlin: exploring Arrow by Ties Van de Ven",permalink:"/community/blog/2022/05/18/functional-programming-kotlin-exploring-arrow-ties-van-de-ven"}},c={authorsImageUrls:[]},s=[],p={toc:s},u="wrapper";function y(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Alejandro Serrano presents Arrow Analysis, a Kotlin compiler plug-in that does pre-and post-condition and type invariant checking at compile time."))}y.isMDXComponent=!0}}]);