"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[5222],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>y});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),l=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),s=l(r),g=n,y=s["".concat(p,".").concat(g)]||s[g]||u[g]||a;return r?o.createElement(y,i(i({ref:t},m),{},{components:r})):o.createElement(y,i({ref:t},m))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=g;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[s]="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}g.displayName="MDXCreateElement"},23289:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=r(87462),n=(r(67294),r(3905));const a={title:"Polyjokes\u200a - \u200aA polymorphic approach using Arrow",image:"/img/blog-image-header.png",category:"articles",tags:["core","articles"],link:"https://github.com/dcampogiani/polyjokes"},i=void 0,c={permalink:"/community/blog/2018/10/21/polyjokes",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2018-10-21-polyjokes.md",source:"@site/content/blog/2018-10-21-polyjokes.md",title:"Polyjokes\u200a - \u200aA polymorphic approach using Arrow",description:"@dcampogiani is using a polymorphic approach to retrieve a random user and then a joke about him.",date:"2018-10-21T00:00:00.000Z",formattedDate:"October 21, 2018",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.11,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Polyjokes\u200a - \u200aA polymorphic approach using Arrow",image:"/img/blog-image-header.png",category:"articles",tags:["core","articles"],link:"https://github.com/dcampogiani/polyjokes"},prevItem:{title:"Simple Dependency Management in Kotlin",permalink:"/community/blog/2018/11/07/simple-management-dependency"},nextItem:{title:"Architecting Typed FP Applications & Libraries in Kotlin with Arrow",permalink:"/community/blog/2018/10/05/kotlin-conf-fp-in-kotlin-with-arrow"}},p={authorsImageUrls:[]},l=[],m={toc:l},s="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(s,(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/dcampogiani"},"@dcampogiani")," is using a polymorphic approach to retrieve a random user and then a joke about him."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/dcampogiani/polyjokes"},"Polyjokes\u200a\u2014\u200aA polymorphic approach using Arrow")))}u.isMDXComponent=!0}}]);