"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[8827],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=m(n),u=o,f=s["".concat(c,".").concat(u)]||s[u]||d[u]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var m=2;m<i;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},92275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var r=n(87462),o=(n(67294),n(3905));const i={title:"Domain Model Validation In Kotlin: Part 2",image:"https://miro.medium.com/max/1400/1*vf0byE6Kp5wGwmDqxRbUOg.png",category:"articles",tags:["core","articles"],link:"https://medium.com/@tibtof/domain-model-validation-in-kotlin-part-2-fb4726ef8f8d"},a=void 0,l={permalink:"/community/blog/2022/03/03/domain-model-validation-in-kotlin-part-2",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2022-03-03-domain-model-validation-in-kotlin-part-2.md",source:"@site/content/blog/2022-03-03-domain-model-validation-in-kotlin-part-2.md",title:"Domain Model Validation In Kotlin: Part 2",description:"In the second article in this series, Tiberiu Tofan writes how Validated type can be",date:"2022-03-03T00:00:00.000Z",formattedDate:"March 3, 2022",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.195,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Domain Model Validation In Kotlin: Part 2",image:"https://miro.medium.com/max/1400/1*vf0byE6Kp5wGwmDqxRbUOg.png",category:"articles",tags:["core","articles"],link:"https://medium.com/@tibtof/domain-model-validation-in-kotlin-part-2-fb4726ef8f8d"},prevItem:{title:"Domain Model Validation In Kotlin: Part 3",permalink:"/community/blog/2022/03/10/domain-model-validation-in-kotlin-part-3"},nextItem:{title:"Domain Model Validation In Kotlin: Part 1",permalink:"/community/blog/2022/02/22/domain-model-validation-in-kotlin-part-1"}},c={authorsImageUrls:[]},m=[],p={toc:m},s="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In the second article in this series, Tiberiu Tofan writes how Validated type can be\nused to validate multiple properties, accumulate the errors, apply individual\nelement validations to lists of elements, and create rules that\ndepend on numerous properties."))}d.isMDXComponent=!0}}]);