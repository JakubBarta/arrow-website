"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[1989],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=o,y=s["".concat(c,".").concat(d)]||s[d]||u[d]||a;return n?r.createElement(y,i(i({ref:t},m),{},{components:n})):r.createElement(y,i({ref:t},m))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},43600:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"Simple Dependency Management in Kotlin",image:"https://img.youtube.com/vi/CR5h2Wq1yPE/maxresdefault.jpg",category:"videos",tags:["core","videos"],link:"https://www.youtube.com/watch?v=CR5h2Wq1yPE",event:"AndroidTO, Toronto"},i=void 0,l={permalink:"/community/blog/2018/11/07/simple-management-dependency",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2018-11-07-simple-management-dependency.md",source:"@site/content/blog/2018-11-07-simple-management-dependency.md",title:"Simple Dependency Management in Kotlin",description:"In this talk we introduce the concepts of Dependency Management as a language feature, typeclasses, and a live demo of KEEP-87. You can follow along the example in this folder.",date:"2018-11-07T00:00:00.000Z",formattedDate:"November 7, 2018",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"videos",permalink:"/community/blog/tags/videos"}],readingTime:.15,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Simple Dependency Management in Kotlin",image:"https://img.youtube.com/vi/CR5h2Wq1yPE/maxresdefault.jpg",category:"videos",tags:["core","videos"],link:"https://www.youtube.com/watch?v=CR5h2Wq1yPE",event:"AndroidTO, Toronto"},prevItem:{title:"Manual documentation is dead. Long live automated documentation! Automated documentation with \u039bNK",permalink:"/community/blog/2018/11/24/ank"},nextItem:{title:"Polyjokes\u200a - \u200aA polymorphic approach using Arrow",permalink:"/community/blog/2018/10/21/polyjokes"}},c={authorsImageUrls:[]},p=[],m={toc:p},s="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this talk we introduce the concepts of Dependency Management as a language feature, typeclasses, and a live demo of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Kotlin/KEEP/pull/87"},"KEEP-87"),". You can follow along the example in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/arrow-kt/arrow/tree/master/modules/docs/arrow-examples/src/test/kotlin/arrow/typeclasses"},"this folder"),"."))}u.isMDXComponent=!0}}]);