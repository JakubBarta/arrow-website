"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[2271],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(t),f=o,g=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return t?n.createElement(g,i(i({ref:r},p),{},{components:t})):n.createElement(g,i({ref:r},p))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},28741:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=t(87462),o=(t(67294),t(3905));const a={title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-parallel"},i=void 0,l={permalink:"/community/blog/2020/01/29/parallel-processing-the-functional-way-with-arrow-fx",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2020-01-29-parallel-processing-the-functional-way-with-arrow-fx.md",source:"@site/content/blog/2020-01-29-parallel-processing-the-functional-way-with-arrow-fx.md",title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",description:"Learn how to handle parallel processing in Kotlin with Arrow IO monads.",date:"2020-01-29T00:00:00.000Z",formattedDate:"January 29, 2020",tags:[{label:"fx",permalink:"/community/blog/tags/fx"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.06,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-parallel"},prevItem:{title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",permalink:"/community/blog/2020/01/29/monads-and-composition-with-arrow-fx"},nextItem:{title:"Arrow Comonad Approach for GameOfLife with Android Compose",permalink:"/community/blog/2020/01/14/Arrow-Comonad-Android-Compose-gameOfLife"}},c={authorsImageUrls:[]},s=[],p={toc:s},m="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(m,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Learn how to handle parallel processing in Kotlin with Arrow IO monads."))}u.isMDXComponent=!0}}]);