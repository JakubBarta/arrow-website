"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[1491],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(r),f=o,y=s["".concat(c,".").concat(f)]||s[f]||m[f]||a;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},74838:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(87462),o=(r(67294),r(3905));const a={title:"ArrowFx: Functional Programming for the masses",image:"https://img.youtube.com/vi/uyqqoooKpmI/maxresdefault.jpg",category:"videos",tag:["fx","videos"],link:"https://www.youtube.com/watch?v=uyqqoooKpmI",event:"Kotliners, Budapest"},i=void 0,l={permalink:"/community/blog/2019/06/07/kotliners-arrow-fx",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2019-06-07-kotliners-arrow-fx.md",source:"@site/content/blog/2019-06-07-kotliners-arrow-fx.md",title:"ArrowFx: Functional Programming for the masses",description:"In this talk we recap about the imminent future of Functional Programming in Kotlin. With ArrowFx you are able to encode \u201ceffectful\u201d programs in a controlled way following the FP principles through a direct syntax. You\u2019ll think you\u2019re writing imperative code!",date:"2019-06-07T00:00:00.000Z",formattedDate:"June 7, 2019",tags:[],readingTime:.205,hasTruncateMarker:!1,authors:[],frontMatter:{title:"ArrowFx: Functional Programming for the masses",image:"https://img.youtube.com/vi/uyqqoooKpmI/maxresdefault.jpg",category:"videos",tag:["fx","videos"],link:"https://www.youtube.com/watch?v=uyqqoooKpmI",event:"Kotliners, Budapest"},prevItem:{title:"Modular functional programming with Kotlin",permalink:"/community/blog/2019/07/02/modular-app-kotlin"},nextItem:{title:"How KEEP-87 & Typeclasses will change the way we write Kotlin",permalink:"/community/blog/2019/06/04/keep-87-and-typeclasses"}},c={authorsImageUrls:[]},u=[],p={toc:u},s="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(s,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this talk we recap about the imminent future of Functional Programming in Kotlin. With ArrowFx you are able to encode \u201ceffectful\u201d programs in a controlled way following the FP principles through a direct syntax. You\u2019ll think you\u2019re writing imperative code!"))}m.isMDXComponent=!0}}]);