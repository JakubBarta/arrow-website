"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[6541],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=i,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23612:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(67294),i=n(86010),a=n(35281),o=n(95999);const l={admonition:"admonition_LlT9",admonitionHeading:"admonitionHeading_tbUL",admonitionIcon:"admonitionIcon_kALy",admonitionContent:"admonitionContent_S0QG"};const c={note:{infimaClassName:"secondary",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 14 16"},r.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))},label:r.createElement(o.Z,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)"},"note")},tip:{infimaClassName:"success",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 12 16"},r.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))},label:r.createElement(o.Z,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)"},"tip")},danger:{infimaClassName:"danger",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 12 16"},r.createElement("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))},label:r.createElement(o.Z,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)"},"danger")},info:{infimaClassName:"info",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 14 16"},r.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))},label:r.createElement(o.Z,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)"},"info")},caution:{infimaClassName:"warning",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 16 16"},r.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))},label:r.createElement(o.Z,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)"},"caution")}},s={secondary:"note",important:"info",success:"tip",warning:"danger"};function u(e){const{mdxAdmonitionTitle:t,rest:n}=function(e){const t=r.Children.toArray(e),n=t.find((e=>r.isValidElement(e)&&"mdxAdmonitionTitle"===e.props?.mdxType)),i=r.createElement(r.Fragment,null,t.filter((e=>e!==n)));return{mdxAdmonitionTitle:n,rest:i}}(e.children);return{...e,title:e.title??t,children:n}}function p(e){const{children:t,type:n,title:o,icon:p}=u(e),m=function(e){const t=s[e]??e,n=c[t];return n||(console.warn(`No admonition config found for admonition type "${t}". Using Info as fallback.`),c.info)}(n),d=o??m.label,{iconComponent:h}=m,f=p??r.createElement(h,null);return r.createElement("div",{className:(0,i.Z)(a.k.common.admonition,a.k.common.admonitionType(e.type),"alert",`alert--${m.infimaClassName}`,l.admonition)},r.createElement("div",{className:l.admonitionHeading},r.createElement("span",{className:l.admonitionIcon},f),d),r.createElement("div",{className:l.admonitionContent},t))}},82605:(e,t,n)=>{n.d(t,{Z:()=>C});var r,i=n(87462),a=n(67294),o=n(23612);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}const c=e=>{let{title:t,titleId:n,...i}=e;return a.createElement("svg",l({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},i),t?a.createElement("title",{id:n},t):null,r||(r=a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M23 12c0 6.075-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1s11 4.925 11 11Zm-12 1V7h2v6h-2Zm0 2v2h2v-2h-2Z",fill:"currentColor"})))};var s;function u(){return u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u.apply(this,arguments)}const p=e=>{let{title:t,titleId:n,...r}=e;return a.createElement("svg",u({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},r),t?a.createElement("title",{id:n},t):null,s||(s=a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M12 23c6.075 0 11-4.925 11-11S18.075 1 12 1 1 5.925 1 12s4.925 11 11 11ZM9 11.5h2v4H9v2h6v-2h-2v-6H9v2ZM13 8V6h-2v2h2Z",fill:"currentColor"})))};var m;function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},d.apply(this,arguments)}const h=e=>{let{title:t,titleId:n,...r}=e;return a.createElement("svg",d({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},r),t?a.createElement("title",{id:n},t):null,m||(m=a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M1 12c0 6.075 4.925 11 11 11s11-4.925 11-11S18.075 1 12 1 1 5.925 1 12Zm8.793-4.293L14.086 12l-4.293 4.293 1.414 1.414 5-5 .707-.707-.707-.707-5-5-1.414 1.414Z",fill:"currentColor"})))};var f;function k(){return k=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},k.apply(this,arguments)}const v=e=>{let{title:t,titleId:n,...r}=e;return a.createElement("svg",k({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},r),t?a.createElement("title",{id:n},t):null,f||(f=a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M4.25 9a7.75 7.75 0 1 1 15.5 0v4.823l2.464 4.927H1.787l2.463-4.927V9ZM10 23h4v-2h-4v2Z",fill:"currentColor"})))};var b;function g(){return g=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},g.apply(this,arguments)}const w=e=>{let{title:t,titleId:n,...r}=e;return a.createElement("svg",g({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},r),t?a.createElement("title",{id:n},t):null,b||(b=a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"m12 1.5-11 21h22l-11-21ZM11 16v-6h2v6h-2Zm0 2v2h2v-2h-2Z",fill:"currentColor"})))},y={note:a.createElement(h,null),tip:a.createElement(v,null),info:a.createElement(p,null),caution:a.createElement(w,null),danger:a.createElement(c,null)};function C(e){let{type:t,...n}=e;return a.createElement(a.Fragment,null,a.createElement(o.Z,(0,i.Z)({icon:y[t],type:t},n)))}},79145:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(87462),i=(n(67294),n(3905)),a=n(82605);const o={sidebar_position:3},l="Circuit breaker",c={unversionedId:"learn/resilience/circuitbreaker",id:"learn/resilience/circuitbreaker",title:"Circuit breaker",description:"When a service is overloaded, additional interaction may only worsen its",source:"@site/content/docs/learn/resilience/circuitbreaker.md",sourceDirName:"learn/resilience",slug:"/learn/resilience/circuitbreaker",permalink:"/learn/resilience/circuitbreaker",draft:!1,editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/docs/learn/resilience/circuitbreaker.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"learnSidebar",previous:{title:"Retry and repeat",permalink:"/learn/resilience/retry-and-repeat"},next:{title:"Saga",permalink:"/learn/resilience/saga"}},s={},u=[{value:"Circuit breaker protocol",id:"circuit-breaker-protocol",level:2},{value:"Opening strategies",id:"opening-strategies",level:2},{value:"Arrow&#39;s <code>CircuitBreaker</code>",id:"arrows-circuitbreaker",level:2}],p={toc:u},m="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"circuit-breaker"},"Circuit breaker"),(0,i.kt)("p",null,"When a service is overloaded, additional interaction may only worsen its\noverloaded state. This is especially true when combined with retry mechanisms such as ",(0,i.kt)("a",{parentName:"p",href:"../retry-and-repeat/"},(0,i.kt)("inlineCode",{parentName:"a"},"Schedule")),".\nSometimes, simply using a back-off retry policy might not be sufficient\nduring peak traffic. To prevent such overloaded resources from overloading,\na ",(0,i.kt)("strong",{parentName:"p"},"circuit breaker")," protects the service by failing fast. This helps us\nachieve stability and prevents cascading failures in distributed systems."),(0,i.kt)("h2",{id:"circuit-breaker-protocol"},"Circuit breaker protocol"),(0,i.kt)("p",null,"A circuit breaker is named after a similar concept in electrical engineering.\nIt may be in one of three states."),(0,i.kt)("mermaid",{value:'graph LR;\n  closed{{"Closed<br />(normal operation)"}};\n  open{{"Open<br />(all requests fail)"}};\n  halfopen{{Half Open}};\n  closed--\x3e|max. failures reached|open;\n  open--\x3e|after reset timeout|halfopen;\n  halfopen--\x3e|test request succeeds|closed;\n  halfopen--\x3e|test request fails|open;'}),(0,i.kt)(a.Z,{type:"note",icon:"\ud83d\udd00",title:"Closed",mdxType:"Admonition"},(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This is the state in which the circuit breaker starts."),(0,i.kt)("li",{parentName:"ul"},"Requests are made normally in this state:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"When an exception occurs, it increments the failure counter.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"When the failure counter reaches the given ",(0,i.kt)("inlineCode",{parentName:"li"},"maxFailures")," threshold,\nthe breaker moves to the ",(0,i.kt)("em",{parentName:"li"},"Open")," state."))),(0,i.kt)("li",{parentName:"ul"},"A successful request will reset the failure counter to zero."))))),(0,i.kt)(a.Z,{type:"note",icon:"\u23f9\ufe0f",title:"Open",mdxType:"Admonition"},(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In this state, the circuit breaker short-circuits/fails-fast all requests.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is done by throwing the ",(0,i.kt)("inlineCode",{parentName:"li"},"ExecutionRejected")," exception."))),(0,i.kt)("li",{parentName:"ul"},"If a request is made after the configured ",(0,i.kt)("inlineCode",{parentName:"li"},"resetTimeout"),",\nthe breaker moves to the ",(0,i.kt)("em",{parentName:"li"},"Half Open")," state,\nallowing one request to go through as a test."))),(0,i.kt)(a.Z,{type:"note",icon:"\u2934\ufe0f",title:"Half Open",mdxType:"Admonition"},(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The circuit breaker is in this state while allowing a request to go through as a ",(0,i.kt)("em",{parentName:"li"},"test request"),".",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"All other requests made while test request` is still running short-circuit/fail-fast."))),(0,i.kt)("li",{parentName:"ul"},"If the test request succeeds, the circuit breaker is tripped back into ",(0,i.kt)("em",{parentName:"li"},"Closed"),",\nwith the ",(0,i.kt)("inlineCode",{parentName:"li"},"resetTimeout")," and the ",(0,i.kt)("inlineCode",{parentName:"li"},"failures")," count also reset to initial values."),(0,i.kt)("li",{parentName:"ul"},"If the test request fails, the circuit breaker moves back to ",(0,i.kt)("em",{parentName:"li"},"Open"),",\nand the ",(0,i.kt)("inlineCode",{parentName:"li"},"resetTimeout")," is multiplied by the ",(0,i.kt)("inlineCode",{parentName:"li"},"exponentialBackoffFactor"),"\nup to the configured ",(0,i.kt)("inlineCode",{parentName:"li"},"maxResetTimeout"),"."))),(0,i.kt)("admonition",{title:"Additional context for this pattern",type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker"},"Circuit Breaker pattern"),"\nin ",(0,i.kt)("em",{parentName:"p"},"Cloud Design Patterns"),".")),(0,i.kt)("h2",{id:"opening-strategies"},"Opening strategies"),(0,i.kt)("p",null,"Arrow offers different strategies to determine when the circuit breaker should open and short-circuit all incoming requests. The currently available ones are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://apidocs.arrow-kt.io/arrow-resilience/arrow.resilience/-circuit-breaker/-opening-strategy/-count/index.html"},(0,i.kt)("em",{parentName:"a"},"Count")),".\nThis strategy sets a maximum number of failures. Once this threshold is reached, the circuit breaker moves to ",(0,i.kt)("em",{parentName:"li"},"Open"),".\nNote that every time a request succeeds, the counter is set back to zero; the circuit breaker only\nmoves to ",(0,i.kt)("em",{parentName:"li"},"Open")," when the maximum number of failures happen ",(0,i.kt)("strong",{parentName:"li"},"consecutively"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://apidocs.arrow-kt.io/arrow-resilience/arrow.resilience/-circuit-breaker/-opening-strategy/-sliding-window/index.html"},(0,i.kt)("em",{parentName:"a"},"Sliding Window")),".\nThis strategy counts the number of failures within a given time window. Unlike the ",(0,i.kt)("inlineCode",{parentName:"li"},"Count")," approach, the circuit breaker\nwill only move to ",(0,i.kt)("inlineCode",{parentName:"li"},"Open")," if the number of failing requests tracked within the given period exceeds the threshold. As the\ntime window slides, the failures out of the window limits are ignored.")),(0,i.kt)("h2",{id:"arrows-circuitbreaker"},"Arrow's ",(0,i.kt)("a",{parentName:"h2",href:"https://apidocs.arrow-kt.io/arrow-resilience/arrow.resilience/-circuit-breaker/index.html"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitBreaker"))),(0,i.kt)("p",null,"Let's create a circuit breaker that only allows us to call a remote service twice.\nAfter that, whenever more than two requests fail with an exception,\nthe circuit breaker starts short-circuiting/failing-fast."),(0,i.kt)("p",null,"A new instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"CircuitBreaker")," is created using ",(0,i.kt)("a",{parentName:"p",href:"https://apidocs.arrow-kt.io/arrow-resilience/arrow.resilience/-circuit-breaker/-companion/of.html"},(0,i.kt)("inlineCode",{parentName:"a"},"of")),"; there, we specify\nthe different options. "),(0,i.kt)("admonition",{title:"Deprecation in Arrow 1.2",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"of")," constructor function has been deprecated in favor of exposing the ",(0,i.kt)("inlineCode",{parentName:"p"},"CircuitBreaker")," constructor.")),(0,i.kt)("p",null,"Then we wrap every call to the service that may\npotentially fail with ",(0,i.kt)("a",{parentName:"p",href:"https://apidocs.arrow-kt.io/arrow-resilience/arrow.resilience/-circuit-breaker/protect-or-throw.html"},(0,i.kt)("inlineCode",{parentName:"a"},"protectOrThrow"))," or ",(0,i.kt)("a",{parentName:"p",href:"https://apidocs.arrow-kt.io/arrow-resilience/arrow.resilience/-circuit-breaker/protect-either.html"},(0,i.kt)("inlineCode",{parentName:"a"},"protectEither")),", depending on how we\nwant this error to be communicated back. If the error arises, the internal state\nof the circuit breaker also changes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'@ExperimentalTime\nsuspend fun main(): Unit {\n  val circuitBreaker = CircuitBreaker(\n    openingStrategy = OpeningStrategy.Count(2),\n    resetTimeout = 2.seconds,\n    exponentialBackoffFactor = 1.2,\n    maxResetTimeout = 60.seconds,\n  )\n\n  // normal operation\n  circuitBreaker.protectOrThrow { "I am in Closed: ${circuitBreaker.state()}" }.also(::println)\n\n  // simulate service getting overloaded\n  Either.catch { \n    circuitBreaker.protectOrThrow { throw RuntimeException("Service overloaded") }\n  }.also(::println)\n  Either.catch {\n    circuitBreaker.protectOrThrow { throw RuntimeException("Service overloaded") }\n  }.also(::println)\n  circuitBreaker.protectEither { }\n   .also { println("I am Open and short-circuit with ${it}. ${circuitBreaker.state()}") }\n\n  // simulate reset timeout\n  println("Service recovering . . .").also { delay(2000) }\n\n  // simulate test request success\n  circuitBreaker.protectOrThrow { \n    "I am running test-request in HalfOpen: ${circuitBreaker.state()}" \n  }.also(::println)\n  println("I am back to normal state closed ${circuitBreaker.state()}")\n}\n')),(0,i.kt)("p",null,"A common pattern to make resilient systems is to compose a circuit breaker with\na backing-off policy that prevents the resource from overloading. ",(0,i.kt)("inlineCode",{parentName:"p"},"Schedule")," is insufficient to make your system resilient because you\nalso have to consider parallel calls to your functions.\nIn contrast, a circuit breaker track failures of every function call or\neven different functions to the same resource or service."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'@ExperimentalTime\nsuspend fun main(): Unit {\n  suspend fun apiCall(): Unit {\n    println("apiCall . . .")\n    throw RuntimeException("Overloaded service")\n  }\n\n  val circuitBreaker = CircuitBreaker(\n    openingStrategy = OpeningStrategy.Count(2),\n    resetTimeout = 2.seconds,\n    exponentialBackoffFactor = 1.2,\n    maxResetTimeout = 60.seconds,\n  )\n\n  suspend fun <A> resilient(schedule: Schedule<Throwable, *>, f: suspend () -> A): A =\n    schedule.retry { circuitBreaker.protectOrThrow(f) }\n\n  // simulate getting overloaded\n  Either.catch {\n    resilient(Schedule.recurs(5), ::apiCall)\n  }.let { println("recurs(5) apiCall twice and 4x short-circuit result from CircuitBreaker: $it") }\n\n  // simulate reset timeout\n  delay(2000)\n  println("CircuitBreaker ready to half-open")\n\n  // retry once,\n  // and when the CircuitBreaker opens after 2 failures\n  //    retry with exponential back-off with same time as CircuitBreaker\'s resetTimeout\n  val fiveTimesWithBackOff = Schedule.recurs<Throwable>(1) andThen\n    Schedule.exponential(2.seconds) and Schedule.recurs(5)\n\n  Either.catch {\n    resilient(fiveTimesWithBackOff, ::apiCall)\n  }.let { println("exponential(2.seconds) and recurs(5) always retries with actual apiCall: $it") }\n}\n')),(0,i.kt)("admonition",{title:"One circuit breaker to rule them all",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If several (concurrent) threads access the same service, they should be\nprotected by the ",(0,i.kt)("em",{parentName:"p"},"same")," circuit breaker. That is, not circuit breakers created\nwith the same parameters, literally the ",(0,i.kt)("em",{parentName:"p"},"same instance"),".")))}d.isMDXComponent=!0}}]);